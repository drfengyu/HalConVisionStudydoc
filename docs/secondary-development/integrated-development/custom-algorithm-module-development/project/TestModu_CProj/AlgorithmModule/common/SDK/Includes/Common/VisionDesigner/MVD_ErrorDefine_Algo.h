/***************************************************************************************************
* File:  MVD_ErrorDefine_Algo.h
* Note:  ch: 算法层相关的状态码定义。
         En: Algorithm-related status code definition in namespace VisionDesigner.
*
* Version:  V3.2.0.3
****************************************************************************************************/


#ifndef _MVD_ERROR_DEFINE_ALGO_H_
#define _MVD_ERROR_DEFINE_ALGO_H_

/***************************************************************************************************
 * 通用状态码
***************************************************************************************************/

const static int MVD_ALG_STS_ERR                 = 0x10000000;     ///< ch: 不确定类型错误（接口函数共用）

// 能力检查
const static int MVD_ALG_STS_ERR_ABILITY_ARG     = 0x10000001;     ///< ch: ABILITY存在无效参数

// 内存类检查
const static int MVD_ALG_STS_ERR_MEM_NULL        = 0x10000002;     ///< ch: 内存地址为空
const static int MVD_ALG_STS_ERR_MEM_ALIGN       = 0x10000003;     ///< ch: 内存对齐不满足要求
const static int MVD_ALG_STS_ERR_MEM_LACK        = 0x10000004;     ///< ch: 内存空间大小不够
const static int MVD_ALG_STS_ERR_MEM_SIZE_ALIGN  = 0x10000005;     ///< ch: 内存空间大小不满足对齐要求
const static int MVD_ALG_STS_ERR_MEM_ADDR_ALIGN  = 0x10000006;     ///< ch: 内存地址不满足对齐要求

// 图像类检查
const static int MVD_ALG_STS_ERR_IMG_FORMAT      = 0x10000007;     ///< ch: 图像格式不正确或者不支持
const static int MVD_ALG_STS_ERR_IMG_SIZE        = 0x10000008;     ///< ch: 图像宽高不正确或者超出范围
const static int MVD_ALG_STS_ERR_IMG_STEP        = 0x10000009;     ///< ch: 图像宽高与step参数不匹配
const static int MVD_ALG_STS_ERR_IMG_DATA_NULL   = 0x1000000A;     ///< ch: 图像数据存储地址为空（某个分量）

// 输入输出参数检查
const static int MVD_ALG_STS_ERR_CFG_TYPE        = 0x1000000B;     ///< ch: 设置、获取参数类型不正确
const static int MVD_ALG_STS_ERR_CFG_SIZE        = 0x1000000C;     ///< ch: 设置、获取参数输入、输出结构体大小不正确
const static int MVD_ALG_STS_ERR_PRC_TYPE        = 0x1000000D;     ///< ch: 处理类型不正确
const static int MVD_ALG_STS_ERR_PRC_SIZE        = 0x1000000E;     ///< ch: 处理时输入、输出参数大小不正确
const static int MVD_ALG_STS_ERR_FUNC_TYPE       = 0x1000000F;     ///< ch: 子处理类型不正确
const static int MVD_ALG_STS_ERR_FUNC_SIZE       = 0x10000010;     ///< ch: 子处理时输入、输出参数大小不正确

// 运行参数检查
const static int MVD_ALG_STS_ERR_PARAM_INDEX     = 0x10000011;     ///< ch: index参数不正确
const static int MVD_ALG_STS_ERR_PARAM_VALUE     = 0x10000012;     ///< ch: value参数不正确或者超出范围
const static int MVD_ALG_STS_ERR_PARAM_NUM       = 0x10000013;     ///< ch: param_num参数不正确

// 接口调用检查
const static int MVD_ALG_STS_ERR_NULL_PTR        = 0x10000014;     ///< ch: 函数参数指针为空（共用）
const static int MVD_ALG_STS_ERR_OVER_MAX_MEM    = 0x10000015;     ///< ch: 超过HKA限定最大内存
const static int MVD_ALG_STS_ERR_CALL_BACK       = 0x10000016;     ///< ch: 回调函数出错

// 算法库加密相关检查
const static int MVD_ALG_STS_ERR_ENCRYPT         = 0x10000017;     ///< ch: 加密错误
const static int MVD_ALG_STS_ERR_EXPIRE          = 0x10000018;     ///< ch: 算法库使用期限错误

// 内部模块返回的基本错误类型
const static int MVD_ALG_STS_ERR_BAD_ARG         = 0x10000019;     ///< ch: 参数范围不正确
const static int MVD_ALG_STS_ERR_DATA_SIZE       = 0x1000001A;     ///< ch: 数据大小不正确（一维数据len，二维数据的HKA_SIZE）
const static int MVD_ALG_STS_ERR_STEP            = 0x1000001B;     ///< ch: 数据step不正确（除HKA_IMAGE结构体之外）

// cpu指令集支持错误码
const static int MVD_ALG_STS_ERR_CPUID           = 0x1000001C;      ///< ch: cpu不支持优化代码中的指令集
const static int MVD_ALG_STS_WARNING             = 0x1000001D;      ///< ch: 警告
const static int MVD_ALG_STS_ERR_TIME_OUT        = 0x1000001E;      ///< ch: 算法库超时
const static int MVD_ALG_STS_ERR_LIB_VERSION     = 0x1000001F;      ///< ch: 算法版本号出错
const static int MVD_ALG_STS_ERR_MODEL_VERSION   = 0x10000020;      ///< ch: 模型版本号出错：模板版本号与当前版本不符
const static int MVD_ALG_STS_ERR_GPU_MEM_ALLOC   = 0x10000021;      ///< ch: GPU内存分配错误
const static int MVD_ALG_STS_ERR_FILE_NON_EXIST  = 0x10000022;      ///< ch: 文件不存在
const static int MVD_ALG_STS_ERR_NONE_STRING     = 0x10000023;      ///< ch: 字符串为空
const static int MVD_ALG_STS_ERR_IMAGE_CODEC     = 0x10000024;      ///< ch: 图像解码器错误
const static int MVD_ALG_STS_ERR_FILE_OPEN       = 0x10000025;      ///< ch: 打开文件错误
const static int MVD_ALG_STS_ERR_FILE_READ       = 0x10000026;      ///< ch: 文件读取错误
const static int MVD_ALG_STS_ERR_FILE_WRITE      = 0x10000027;      ///< ch: 文件写错误
const static int MVD_ALG_STS_ERR_FILE_READ_SIZE  = 0x10000028;      ///< ch: 文件读取大小错误
const static int MVD_ALG_STS_ERR_FILE_TYPE       = 0x10000029;      ///< ch: 文件类型错误
const static int MVD_ALG_STS_ERR_MODEL_TYPE      = 0x1000002A;      ///< ch: 模型类型错误
const static int MVD_ALG_STS_ERR_MALLOC_MEM      = 0x1000002B;      ///< ch: 分配内存错误
const static int MVD_ALG_STS_ERR_BIND_CORE_FAILED = 0x1000002C;     ///< ch: 线程绑核失败
const static int MVD_ALG_STS_ERR_ROI_RECT_PARAM     = 0x1000002D;   ///< ch: 感兴趣区域ROI参数错误
const static int MVD_ALG_STS_ERR_ABILITY_MODELU_ERR = 0x1000002E;   ///< ch: 能力集中模块使能错误
const static int MVD_ALG_STS_ERR_ROI_MASK_IMAGE     = 0x1000002F;   ///< ch: 感兴趣区域ROI掩膜图像错误


/***************************************************************************************************
 * 2D算法模块
***************************************************************************************************/
// 对位类
const static int MVD_ALG_STS_ERR_MVBALIGN_LINE_ERROR                    = 0x1010A000;       ///< ch: 直线数量过少或过多,无法对位
const static int MVD_ALG_STS_ERR_MVBALIGN_LINE_PARALLEL                 = 0x1010A001;       ///< ch: 邻边平行
const static int MVD_ALG_STS_ERR_MVBALIGN_LINE_NOEXIST                  = 0x1010A002;       ///< ch: 边不存在,即边的两端点重合
const static int MVD_ALG_STS_ERR_MVBALIGN_LINE_STATENOFIT               = 0x1010A003;       ///< ch: 给定状态和实际对位状态不一致
const static int MVD_ALG_STS_ERR_MVBALIGN_MODU_POSE_FIXTURE_DISABLE     = 0x1010A004;       ///< ch: 位置补正模块未使能
const static int MVD_ALG_STS_ERR_MVBALIGN_MODU_PLATFORM_ALIGN_DISABLE   = 0x1010A005;       ///< ch: 平台对位模块未使能
const static int MVD_ALG_STS_ERR_MVBALIGN_MODU_COORDINATE_DISABLE       = 0x1010A006;       ///< ch: 坐标系模块未使能

const static int MVD_ALG_STS_ERR_MVBALIGN_PARAM_PLATFORM_TYPE           = 0x1010A007;       ///< ch: 对位平台类型参数错误
const static int MVD_ALG_STS_ERR_MVBALIGN_PARAM_PLATFORM_MOVE_TYPE      = 0x1010A008;       ///< ch: 对位平台移动类型参数错误
const static int MVD_ALG_STS_ERR_MVBALIGN_PARAM_IS_ROTATE_CENTER_MOVE   = 0x1010A009;       ///< ch: 旋转中心是否随对位平台移动参数错误
const static int MVD_ALG_STS_ERR_MVBALIGN_PARAM_ALIGNBYLINE_EXCEP_ANGLE = 0x1010A00A;       ///< ch: 边对位边异常角度阈值参数错误
const static int MVD_ALG_STS_ERR_MVBALIGN_PARAM_ALIGN_MODE              = 0x1010A00B;       ///< ch: 对齐方式参数错误

// 标定类
// 通用错误
const static int MVD_ALG_STS_ERR_MVBCALIB_HOMO_CAL_WRONG                = 0x10103002;       ///< ch: 矩阵计算异常，通常为数入数据有问题，需检查输入，重新计算
const static int MVD_ALG_STS_ERR_MVBCALIB_HOMO_WRONG                    = 0x10103007;       ///< ch: 矩阵异常，原因通常是计算出的矩阵行列式为0;或最后一位为0，需检查输入，重新计算
const static int MVD_ALG_STS_ERR_MVBCALIB_HOMO_EST_WRONG                = 0x10103001;       ///< ch: 标定板角点图像到物理左边转换矩阵计算异常（角点不够）

// 自动对位标定
const static int MVD_ALG_STS_ERR_MVBCALIB_CIRCLE_FIT_FAILED             = 0x10103008;       ///< ch: 圆拟合失败，请检查输入点

// 圆定位失败
const static int MVD_ALG_STS_ERR_MVBCALIB_CIRCLR_LOC_FAILED             = 0x10103009;       ///< ch: 圆提取失败，请检查输入图像
const static int MVD_ALG_STS_ERR_MVBCALIB_CIRCLR_SORT_FAILED            = 0x1010300A;       ///< ch: 圆排序失败，请检查输入图像
const static int MVD_ALG_STS_ERR_MVBCALIB_RADIAL_CAL_WRONG              = 0x1010300B;       ///< ch: 径向畸变计算失败，请检查输入图像

// 标定板角点提取模块状态码
const static int MVD_ALG_STS_ERR_MVBCALIB_PAT_SIZE_NOT_ENOUGH           = 0x10103000;       ///< ch: 角点提取结果异常（行列数过少），需调节参数
const static int MVD_ALG_STS_ERR_MVBCALIB_READ_CODE_FAILED              = 0x1010300C;       ///< ch: 标定读码失败，需检查标定图像或调节参数
const static int MVD_ALG_STS_ERR_MVBCALIB_CAMERA_PARA_EST_ERR           = 0x1010300D;       ///< ch: 相机标定错误

// 畸变矫正模块状态码
const static int MVD_ALG_STS_ERR_MVBCALIB_WARP_IMG_NOT_MATCH            = 0x10103003;       ///< ch: 图像大小与畸变标定文件不匹配
const static int MVD_ALG_STS_ERR_MVBCALIB_FEW_CALIB_POINTS              = 0x10103004;       ///< ch: 角点数目过少

// N图标定中提取角点成功的图像数目少于最小数目
const static int MVD_ALG_STS_ERR_MVBCALIB_FEW_CALIB_SUCCEED_IMGS        = 0x10103005;       ///< ch: 标定成功的图像过少

// N图标定/映射标定
const static int MVD_ALG_STS_ERR_MVBCALIB_FEW_CALIB_POINTS_PAIR         = 0x10103006;       ///< ch: 标定图像中点对过少

const static int MVD_ALG_STS_ERR_MVB3D_ROBOT_HEC_HAND_EYE_TYPE          = 0x1010300F;       ///< ch: 手眼类型错误
const static int MVD_ALG_STS_ERR_MVB3D_ROBOT_HEC_CALIB_BOARD_SIZE       = 0x10103010;       ///< ch: 标定板大小错误
const static int MVD_ALG_STS_ERR_MVB3D_ROBOT_HEC_SQUARE_SIZE            = 0x10103011;       ///< ch: 标定板物理尺寸错误
const static int MVD_ALG_STS_ERR_MVB3D_ROBOT_HEC_IMG_NUM                = 0x10103012;       ///< ch: 标定图像数量错误
const static int MVD_ALG_STS_ERR_MVB3D_ROBOT_HEC_CALIB_METHOD           = 0x10103013;       ///< ch: 手眼标定方法错误

const static int MVD_ALG_STS_ERR_MVBCALIB_MODU_HOMO_EST_DISABLE                         = 0x10103014;  ///< ch: Homo估计(N点法相机标定)模块未使能  
const static int MVD_ALG_STS_ERR_MVBCALIB_MODU_HOMO_TRANS_DISABLE                       = 0x10103015;  ///< ch: Homo transformation转换模块未使能
const static int MVD_ALG_STS_ERR_MVBCALIB_MODU_ALIGN_CALIB_DISABLE                      = 0x10103016;  ///< ch: 自动对位系统标定模块未使能
const static int MVD_ALG_STS_ERR_MVBCALIB_MODU_CALIBBOARD_LOC_DISABLE                   = 0x10103017;  ///< ch: 标定板角点(或圆心)定位模块未使能
const static int MVD_ALG_STS_ERR_MVBCALIB_MODU_CALIBBOARD_CALIB_DISABLE                 = 0x10103018;  ///< ch: 标定板标定模块未使能
const static int MVD_ALG_STS_ERR_MVBCALIB_MODU_DISTORT_CORRECT_DISABLE                  = 0x10103019;  ///< ch: 单幅图畸变矫正模块未使能
const static int MVD_ALG_STS_ERR_MVBCALIB_MODU_SINGLE_CAMERA_CALIB_DISABLE              = 0x1010301A;  ///< ch: 单相机内外参标定模块未使能
const static int MVD_ALG_STS_ERR_MVBCALIB_MODU_STEREO_CAMERA_CALIB_DISABLE              = 0x1010301B;  ///< ch: 双相机内外参标定模块未使能
const static int MVD_ALG_STS_ERR_MVBCALIB_MODU_HANDEYE_CALIB_DISABLE                    = 0x1010301C;  ///< ch: 手眼标定模块未使能
const static int MVD_ALG_STS_ERR_MVBCALIB_MODU_CALBOARD_CREATE_DISABLE                  = 0x1010301D;  ///< ch: 自研标定版生成模块未使能  
const static int MVD_ALG_STS_ERR_MVBCALIB_MODU_CALIBBOARD_POSE_CHECK_DISABLE            = 0x1010301E;  ///< ch: 标定板位姿检查（用于引导标定）模块未使能
const static int MVD_ALG_STS_ERR_MVBCALIB_MODU_LENS_DISTORT_CORRECT_DISABLE             = 0x1010301F;  ///< ch: 镜头畸变矫正模块未使能
const static int MVD_ALG_STS_ERR_MVBCALIB_MODU_CALIBBOARD_MAP_CALIB_DISABLE             = 0x10103020;  ///< ch: 映射标定模块未使能
const static int MVD_ALG_STS_ERR_MVBCALIB_MODU_CALIBBOARD_N_POINT_DISABLE               = 0x10103021;  ///< ch: N图像标定模块未使能
const static int MVD_ALG_STS_ERR_MVBCALIB_MODU_INCLINE_ASSESS_DISABLE                   = 0x10103022;  ///< ch: 倾斜度评估模块未使能
const static int MVD_ALG_STS_ERR_MVBCALIB_MODU_HACCI_DISABLE                            = 0x10103023;  ///< ch: Homo估计\自动对位系统标定\标定板标定模块\标定板位姿检查（用于引导标定）模块\倾斜度评估模块未使能   
const static int MVD_ALG_STS_ERR_MVBCALIB_MODU_CALIBBOARD_CALIB_DISTORT_CORRECT_DISABLE = 0x10103024;  ///< ch: 标定板标定模块和单幅图畸变矫正模块未使能
const static int MVD_ALG_STS_ERR_MVBCALIB_MODU_CCSSHCCCI_DISABLE                        = 0x10103025;  ///< ch: 标定板标定模块\标定板标定模块\单相机内外参标定模块\双相机内外参标定模块\手眼标定模块\标定板位姿检查（用于引导标定）模块\映射标定模块\N图像标定模块\倾斜度评估模块未使能

const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_HOMO_EST_FREEDOM                        = 0x10103026;  ///< ch: Homo估计自由度参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_HOMO_REGRESSION_FUN                     = 0x10103027;  ///< ch: 回归函数参数错误 
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_HOMO_WFUN_PARAM                         = 0x10103028;  ///< ch: 权重函数削波因数系数参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_HOMO_DIST_TH                            = 0x10103029;  ///< ch: 判定数据是否适应于模型的距离阈值参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_HOMO_SAMPLE_RATIO                       = 0x1010302A;  ///< ch: 样本率参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_HOMO_TRANSFORM_TYPE                     = 0x1010302B;  ///< ch: Homo变换类型参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_ALIGN_TWO_CAMERA_MODE                   = 0x1010302C;  ///< ch: 两相机模式参数错误

const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_CHECKERBOARD_THRESH                     = 0x1010302D;  ///< ch: 阈值处理方法参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_CHECKERBOARD_SUBPIXEL_WIN               = 0x1010302E;  ///< ch: 亚像素窗口大小参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_CHECKERBOARD_LOC_FIDUCIAL_MARK          = 0x1010302F;  ///< ch: 定位时标定板基准点参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_CHECKERBOARD_GRAY_CONTRAST              = 0x10103030;  ///< ch: 黑白模块灰度对比度最小值参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_CHECKERBOARD_SUBPIXEL_WIN_AUTO          = 0x10103031;  ///< ch: 亚像素窗口大小自适应标志参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_CHECKERBOARD_FILT_STS                   = 0x10103032;  ///< ch: 中值滤波状态参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_CHECKERBOARD_WEAK_SORT_FLAG             = 0x10103033;  ///< ch: 平面弱排序模式参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_CHECKERBOARD_SUBPIXEL_WIN2              = 0x10103034;  ///< ch: 亚像素窗口大小参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_CHECKERBOARD_GRAY_CONTRAST2             = 0x10103035;  ///< ch: 黑白模块灰度对比度最小值参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_CHECKERBOARD_SUBPIXEL_WIN_AUTO2         = 0x10103036;  ///< ch: 亚像素窗口大小自适应标志参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_CHECKERBOARD_FILT_STS2                  = 0x10103037;  ///< ch: 中值滤波状态参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_CHECKERBOARD_WEAK_SORT_FLAG2            = 0x10103038;  ///< ch: 平面弱排序模式参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_CIRCLEBOARD_CIRCULARITY                 = 0x10103039;  ///< ch: Mark点圆度参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_CIRCLEBOARD_EDGE_THRESH_LOW             = 0x1010303A;  ///< ch: 亚像素边缘提取低阈值参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_CIRCLEBOARD_EDGE_THRESH_HIGH            = 0x1010303B;  ///< ch: 亚像素边缘提取高阈值参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_CIRCLEBOARD_CIRCLE_MODE                 = 0x1010303C;  ///< ch: 圆点标定板圆点类型参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_CALIBBOARD_CORRECT_MODEL                = 0x1010303D;  ///< ch: 标定板校正模式参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_CALIBBOARD_PERSPECTIVE_CORRECT_CENTER_X = 0x1010303E;  ///< ch: 标定板透视畸变校正中心x坐标参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_CALIBBOARD_PERSPECTIVE_CORRECT_CENTER_Y = 0x1010303F;  ///< ch: 标定板透视畸变校正中心y坐标参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_ALIGN_AXIS_METHOD                       = 0x10103040;  ///< ch: 轴标定方法参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_STEREO_CAMERA_PARA_LM_MODE              = 0x10103041;  ///< ch: 双目参数的优化模式参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_ROBOT_HEC_HAND_EYE_TYPE                 = 0x10103042;  ///< ch: 手眼类型参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_ROBOT_HEC_ROT_TYPE                      = 0x10103043;  ///< ch: 旋转轴参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_ROBOT_HEC_CALIB_METHOD                  = 0x10103044;  ///< ch: 手眼标定方程求解方法参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_ROBOT_HEC_PARAM_SX_LM_LAMBDA            = 0x10103045;  ///< ch: LM算法Lagrange乘子参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_ROBOT_HEC_PARAM_SX_LM_MAX_ITER_NUM      = 0x10103046;  ///< ch: LM算法最大迭代次数参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_ROBOT_HEC_PARAM_SX_LM_EPS               = 0x10103047;  ///< ch: LM算法精度要求参数错误
const static int MVD_ALG_STS_ERR_MVBCALIB_PARAM_SINGLE_CAMERA_CALIB_DIST_NUM            = 0x10103048;  ///< ch: 畸变系数个数参数错误
const static int MVD_ALG_STS_ERR_MVBCLIB_ERR_CHECK_NORMAL                               = 0x10103049;     ///< ch: 误差检查正常
const static int MVD_ALG_STS_ERR_MVBCLIB_TRANS_ERR_MAX_BEYOND                           = 0x1010304A;     ///< ch: 平移估计最大误差过大
const static int MVD_ALG_STS_ERR_MVBCLIB_TRANS_ERR_AVG_BEYOND                           = 0x1010304B;     ///< ch: 平移估计平均误差过大
const static int MVD_ALG_STS_ERR_MVBCLIB_ROT_ERR_MAX_BEYOND                             = 0x1010304C;     ///< ch: 旋转估计最大误差过大
const static int MVD_ALG_STS_ERR_MVBCLIB_ROT_ERR_AVG_BEYOND                             = 0x1010304D;     ///< ch: 旋转误差平均误差过大
const static int MVD_ALG_STS_ERR_MVBCLIB_TRANS_MOT_ERR_MAX_BEYOND                       = 0x1010304E;     ///< ch: 机构最大平移误差率过大
const static int MVD_ALG_STS_ERR_MVBCLIB_ROT_MOT_ERR_MAX_BEYOND                         = 0x1010304F;     ///< ch: 机构最大旋转误差率过大
const static int MVD_ALG_STS_ERR_MVBCLIB_IMG_MAP_ERR_MAX_BEYOND                         = 0x10103050;     ///< ch: 映射标定误差过大
const static int MVD_ALG_STS_ERR_MVBCALIB_POINTS_COLLINEATION                           = 0x10103061;     ///< ch: 输入点集全部共线――减少输入点(不超过3个点)，或者检查点集数据

// 颜色识别类
const static int MVD_ALG_STS_ERR_MVBCOLOR_NO_FOUND_MODEL                = 0x10107000;       ///< ch: 颜色模型不存在
const static int MVD_ALG_STS_ERR_MVBCOLOR_MODEL_NUM_INVALID             = 0x10107001;       ///< ch: 当前模型数量无效
const static int MVD_ALG_STS_ERR_MVBCOLOR_BINARY_INDEX_INVALID          = 0x10107002;       ///< ch: 当前二值图像索引无效
const static int MVD_ALG_STS_ERR_MVBCOLOR_COLOR_MODEL_CONFUSE           = 0x10107003;       ///< ch: 颜色模型之间发生混淆
const static int MVD_ALG_STS_ERR_MVBCOLOR_COLOR_MODEL_MIX               = 0x10107004;       ///< ch: 颜色模型区分不显著
const static int MVD_ALG_STS_ERR_MVBCOLOR_HUE_SCALE_ERR                 = 0x10107005;       ///< ch: Hue通道鲁棒性参数输入有误
const static int MVD_ALG_STS_ERR_MVBCOLOR_SATURATION_SCALE_ERR          = 0x10107006;       ///< ch: 饱和度通道鲁棒性参数输入有误
const static int MVD_ALG_STS_ERR_MVBCOLOR_INTENSITY_SCALE_ERR           = 0x10107007;       ///< ch: 亮度通道鲁棒性参数输入有误
const static int MVD_ALG_STS_ERR_MVBCOLOR_COLOR_FILE_INVALID            = 0x10107008;       ///< ch: 颜色库无效
const static int MVD_ALG_STS_ERR_MVBCOLOR_NO_IMG_DATA_IN_MODEL          = 0x10107009;       ///< ch: 颜色库有效，但无图像数据（训练时未存图） ///< ch: 不再使用
const static int MVD_ALG_STS_ERR_MVBCOLOR_RECOGNITION_K_ERROR           = 0x1010700A;       ///< ch: 颜色识别K值过大，建议减小K值或增大样本数
const static int MVD_ALG_STS_ERR_MVBCOLOR_MODEL_DATA_PTR_ERROR          = 0x1010700B;       ///< ch: 模型版本正确，但内部指针错误，说明内存数据被更改
const static int MVD_ALG_STS_ERR_MVBCOLOR_MODEL_ARG_ERROR               = 0x1010700C;       ///< ch: 颜色库有效，但基本数据错误（被更改，需重新训练）

const static int MVD_ALG_STS_ERR_MVBCOLOR_MODU_COLOR_SPACE_CONVERT_DISABLE             = 0x1010700D;        ///< ch: 颜色空间转换模块无效
const static int MVD_ALG_STS_ERR_MVBCOLOR_MODU_COLOR_EXTRACT_DISABLE                   = 0x1010700E;        ///< ch: 颜色抽取模块无效
const static int MVD_ALG_STS_ERR_MVBCOLOR_MODU_COLOR_MULTI_EXTRACT_DISABLE             = 0x1010700F;        ///< ch: 颜色多范围抽取模块模块无效
const static int MVD_ALG_STS_ERR_MVBCOLOR_MODU_COLOR_MEASURE_DISABLE                   = 0x10107010;        ///< ch: 颜色测量模块模块无效	
const static int MVD_ALG_STS_ERR_MVBCOLOR_MODU_COLOR_SEGMENT_MODEL_CREATE_DISABLE      = 0x10107011;        ///< ch: 颜色模型创建模块模块无效
const static int MVD_ALG_STS_ERR_MVBCOLOR_MODU_COLOR_SEGMENT_DISABLE                   = 0x10107012;        ///< ch: 颜色分割模块模块无效
const static int MVD_ALG_STS_ERR_MVBCOLOR_MODU_COLOR_SEGMENT_ANALYSIS_DISABLE          = 0x10107013;        ///< ch: 颜色分割分析模块模块无效
const static int MVD_ALG_STS_ERR_MVBCOLOR_MODU_COLOR_RECOGNITION_MODEL_CREATE_DISABLE  = 0x10107014;        ///< ch: 颜色识别模型创建模块模块无效
const static int MVD_ALG_STS_ERR_MVBCOLOR_MODU_COLOR_RECOGNITION_DISABLE               = 0x10107015;        ///< ch: 颜色识别模块模块无效
const static int MVD_ALG_STS_ERR_MVBCOLOR_MODU_COLOR_EXTRACT_MEASURE_DISABLE                      = 0x10107016; ///< ch: 颜色测量/颜色抽取模块模块无效
const static int MVD_ALG_STS_ERR_MVBCOLOR_MODU_COLOR_SEGMENT_SEGMENT_MODEL_CREATE_DISABLE         = 0x10107017; ///< ch: 颜色分割/颜色模型创建模块模块模块无效
const static int MVD_ALG_STS_ERR_MVBCOLOR_MODU_COLOR_RECOGNITION_MODEL_CREATE_RECOGNITION_DISABLE = 0x10107018; ///< ch: 颜色识别模型创建模块/颜色识别模块模块无效
const static int MVD_ALG_STS_ERR_MVBCOLOR_MODU_COLOR_EXTRACT_MULTI_EXTRACT_MEASURE_DISABLE        = 0x10107019; ///< ch: 颜色抽取/颜色多范围抽取/颜色测量模块无效

const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_COLOR_SPACE_TYPE                       = 0x10107200;    ///< ch: 颜色空间类型参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_COLOR_SPACE_CONVERT_TYPE               = 0x10107201;    ///< ch: 颜色空间转换类型参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_RGB_CONVERT_GRAY_TYPE                  = 0x10107202;    ///< ch: RGB转灰度类型参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_RGB_CONVERT_GRAY_R_RATIO               = 0x10107203;    ///< ch: RGB转灰度，R自设转换比例参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_RGB_CONVERT_GRAY_G_RATIO               = 0x10107204;    ///< ch: RGB转灰度，G自设转换比例参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_RGB_CONVERT_GRAY_B_RATIO               = 0x10107205;    ///< ch: RGB转灰度，B自设转换比例参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_EXTRACT_C1_LOW_TOLERANCE               = 0x10107206;    ///< ch: 第一通道(R or H)的低容忍值参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_EXTRACT_C1_HIGH_TOLERANCE              = 0x10107207;    ///< ch: 第一通道(R or H)的高容忍值参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_EXTRACT_C2_LOW_TOLERANCE               = 0x10107208;    ///< ch: 第二通道(R or H)的低容忍值参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_EXTRACT_C2_HIGH_TOLERANCE              = 0x10107209;    ///< ch: 第二通道(R or H)的高容忍值参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_EXTRACT_C3_LOW_TOLERANCE               = 0x1010720A;    ///< ch: 第三通道(R or H)的低容忍值参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_EXTRACT_C3_HIGH_TOLERANCE              = 0x1010720B;    ///< ch: 第三通道(R or H)的高容忍值参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_MEASURE_HIST_BIN_NUM                   = 0x1010720C;    ///< ch: 颜色直方图bin数目参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_KERNEL_SIZE                            = 0x1010720D;    ///< ch: 滤波内核大小, 颜色模型创建与分割共用参数参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_COLOR_SALIENCY_THRESH                  = 0x1010720E;    ///< ch: 颜色显著性阈值参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_COLOR_SATURATION_THRESH                = 0x1010720F;    ///< ch: 颜色饱和度阈值参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_COLOR_INTENSITY_LOW_THRESH             = 0x10107210;    ///< ch: 颜色亮度低阈值参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_COLOR_INTENSITY_HIGH_THRESH            = 0x10107211;    ///< ch: 颜色亮度高阈值参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_COLOR_SEGMENT_OUTPUT_TYPE              = 0x10107212;    ///< ch: 颜色分割输出类型参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_COLOR_MINIMUM_PIXEL_COUNT              = 0x10107213;    ///< ch: 最小像素计数参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_COLOR_FEATURE_TYPE                     = 0x10107214;    ///< ch: 颜色特征类型参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_SENSITIVITY_MODE                       = 0x10107215;    ///< ch: 敏感度模式参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_SATURATION_THRESH                      = 0x10107216;    ///< ch: 饱和度阈值参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_BLACK_GRAY_THRESH                      = 0x10107217;    ///< ch: 暗灰阈值参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_WHITE_GRAY_THRESH                      = 0x10107218;    ///< ch: 亮灰阈值参数错误	
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_INTENSITY_ENABLE                       = 0x10107219;    ///< ch: 亮度使能参数错误	
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_K                                      = 0x1010721A;    ///< ch: KNN分类器的k值参数错误	
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_DISTANCE_TYPE                          = 0x1010721B;    ///< ch: KNN分类器的距离类型参数错误	

const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_EXTRACT_CENTER_METHOD                  = 0x1010721C;    ///< ch: 颜色抽取获取中心方法参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_EXTRACT_FEATURE_INTERVAL_MIN           = 0x1010721D;    ///< ch: 颜色抽取最小间隔参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_EXTRACT_FEATURE_THRESH_VALUE           = 0x1010721E;    ///< ch: 颜色抽取特征阈值参数错误
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_RANGE_UNENABLE                         = 0x1010721F;    ///< ch: 通道未使能
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_RANGE_C1_LOW_HIGH_TOLERANCE            = 0x10107220;    ///< ch: C1通道低值大于高值
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_RANGE_C2_LOW_HIGH_TOLERANCE            = 0x10107221;    ///< ch: C2通道低值大于高值
const static int MVD_ALG_STS_ERR_MVBCOLOR_PARAM_RANGE_C3_LOW_HIGH_TOLERANCE            = 0x10107222;    ///< ch: C3通道低值大于高值

// 几何查找类
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MODU_EDGE_FINDER                    = 0x10101000;       ///< ch: 卡尺（边缘查找）模块未使能
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MODU_EDGE_PAIR_FINDER               = 0x10101001;       ///< ch:卡尺（边缘对查找）模块未使能
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MODU_LINE_FINDER                    = 0x10101002;       ///< ch:直线查找模块未使能
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MODU_PAIR_LINE_FINDER               = 0x10101003;       ///< ch:平行线检测模块未使能
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MODU_PARALLEL_FINDER                = 0x10101004;       ///< ch:多平行线检测模块未使能
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MODU_MULTILINE_FINDER               = 0x10101005;       ///< ch:多线查找模块未使能
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MODU_PEAK_FINDER                    = 0x10101006;       ///< ch:顶点检测模块未使能
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MODU_CORNER_FINDER                  = 0x10101007;       ///< ch:边缘交点检测模块未使能
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MODU_RECTANGLE_FINDER               = 0x10101008;       ///< ch:矩形检测模块未使能
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MODU_CIRCLE_FINDER                  = 0x10101009;       ///< ch:圆查找模块未使能
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MODU_ELLIPSE_FINDER                 = 0x1010100A;       ///< ch:椭圆查找模块未使能
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MODU_BLOB_FINDER                    = 0x1010100B;       ///< ch:blob分析模块未使能
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MODU_LUM_CHECK                      = 0x1010100C;       ///< ch:亮度有无模块未使能
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MODU_QUADRANGLE_FINDER              = 0x1010100D;       ///< ch:四边形查找模块未使能
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MODU_CIRCLE_FINDER_V2               = 0x1010100E;       ///< ch:圆查找V2模块未使能
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MODU_MARK_FIND                      = 0x1010100F;       ///< ch:mark点定位模块未使能
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MODU_REGION_PROJECTION              = 0x10101010;       ///< ch:区域投影模块未使能

const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_MIN_RADIUS              = 0x10101011;      ///< ch: 圆最小半径参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_MAX_RADIUS              = 0x10101012;      ///< ch: 圆最大半径参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_EDGE_THRESHOLD          = 0x10101013;      ///< ch: 圆边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_EDGE_POLARITY           = 0x10101014;      ///< ch: 圆边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_FIND_MODE               = 0x10101015;      ///< ch: 查找模式参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_CALIPER_NUM             = 0x10101016;      ///< ch: 卡尺数量参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_START_ANGLE             = 0x10101017;      ///< ch: 圆环起始角度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_ANGLE_EXTEND            = 0x10101018;      ///< ch: 圆环角度范围参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_CCD_SAMPLE_SCALE        = 0x10101019;      ///< ch: 圆下采样系数参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_CCD_CIRCLE_THRESH       = 0x1010101A;      ///< ch: 圆定位敏感度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_HALF_KERNEL_SIZE        = 0x1010101B;      ///< ch: 圆滤波核半宽参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_PROJECTION_LENGTH       = 0x1010101C;      ///< ch: 圆卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_FIT_FUN                 = 0x1010101D;      ///< ch: 圆拟合方式参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_FIT_INIT_TYPE           = 0x1010101E;      ///< ch: 圆初始拟合类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_FIT_REJECT_NUM          = 0x1010101F;      ///< ch: 圆忽略点数参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_FIT_REJECT_DIST         = 0x10101020;      ///< ch: 圆剔除距离参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_V2_FIND_MODE            = 0x10101021;      ///< ch: 圆查找模式参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_V2_CALIPER_NUM          = 0x10101022;      ///< ch: 圆卡尺数量参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_V2_PROJECTION_LENGTH    = 0x10101023;      ///< ch: 圆卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_V2_EDGE_POLARITY        = 0x10101024;      ///< ch: 圆边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_V2_EDGE_THRESHOLD       = 0x10101025;      ///< ch: 圆边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_V2_HALF_KERNEL_SIZE     = 0x10101026;      ///< ch: 圆滤波核半宽参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_V2_FIT_FUN              = 0x10101027;      ///< ch: 圆拟合方式参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_V2_FIT_INIT_TYPE        = 0x10101028;      ///< ch: 圆初始拟合类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_V2_FIT_REJECT_NUM       = 0x10101029;      ///< ch: 圆忽略点数参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_V2_FIT_FIT_REJECT_DIST  = 0x1010102A;      ///< ch: 圆剔除距离参数错误

const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_LINE_EDGE_POLARITY             = 0x1010102B;      ///< ch: 直线查找边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_LINE_FIND_MODE                 = 0x1010102C;      ///< ch: 直线查找模式参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_LINE_FIND_ORIENT               = 0x1010102D;      ///< ch: 直线查找搜索方向参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_LINE_EDGE_THRESHOLD            = 0x1010102E;      ///< ch: 直线查找边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_LINE_CALIPER_NUM               = 0x1010102F;      ///< ch: 直线查找卡尺数量参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_LINE_REGION_WIDTH              = 0x10101030;      ///< ch: 直线查找卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_LINE_REJECT_DIST               = 0x10101031;      ///< ch: 直线查找剔除距离参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_LINE_HALF_KERNEL_SIZE          = 0x10101032;      ///< ch: 直线查找滤波核半宽参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_LINE_FIT_FUN                   = 0x10101033;      ///< ch: 直线查找拟合方式参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_LINE_FIT_INIT_TYPE             = 0x10101034;      ///< ch: 直线查找初始拟合类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_LINE_REJECT_NUM                = 0x10101035;      ///< ch: 直线查找略点数参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MODU_CIRCLR_ANN_ROI                  = 0x10101036;      ///< ch: 圆环查找未使能
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MODU_LINE_BOX_ROI                    = 0x10101037;      ///< ch: 直线box查找未使能

const static int MVD_ALG_STS_ERR_MVBGEOFIND_MUDO_MULTI_CLS_BLOB_FINDER           = 0x10101038;  ///< ch:多类别Blob查找模块未使能
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MUDO_BOX_ROI                         = 0x10101039;  ///< ch:获取BOXROI未使能
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MUDO_ANN_ROI                         = 0x1010103A;  ///< ch:获取圆环型ROI未使能
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MUDO_NEARST_POINT                    = 0x1010103B;  ///< ch:搜索用户输入最近点位置未使能
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_EDGE0_POLARITY              = 0x1010103C; ///< ch:  边缘0极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_EDGE1_POLARITY              = 0x1010103D; ///< ch:  边缘1极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_HALF_KERNEL_SIZE            = 0x1010103E; ///< ch:  滤波核半宽参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_EDGE_THRESHOLD              = 0x1010103F; ///< ch:  边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_EDGE_PAIR_WIDTH             = 0x10101040; ///< ch:  边缘对宽度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_MAXIMUM                     = 0x10101041; ///< ch:  最大结果数参数错误

const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_PROJECTION_TYPE             = 0x10101042; ///< ch:  投影类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_SCORING_TYPE                = 0x10101043; ///< ch:  计分类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_CONTRAST_DROP             = 0x10101044; ///< ch:  曲线类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_CONTRAST_X0               = 0x10101045; ///< ch:  起点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_CONTRAST_X1               = 0x10101046; ///< ch:  中点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_CONTRAST_XC               = 0x10101047; ///< ch:  终点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_CONTRAST_Y0               = 0x10101048; ///< ch:  最低评分参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_CONTRAST_Y1               = 0x10101049; ///< ch:  最高评分参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_DROP             = 0x1010104A; ///< ch:  曲线类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_X0               = 0x1010104B; ///< ch:  起点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_X1               = 0x1010104C; ///< ch:  中点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_XC               = 0x1010104D; ///< ch:  终点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_Y0               = 0x1010104E; ///< ch:  最低评分参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_Y1               = 0x1010104F; ///< ch:  最高评分参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_NEG_DROP         = 0x10101050; ///< ch:  曲线类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_NEG_X0           = 0x10101051; ///< ch:  起点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_NEG_X1           = 0x10101052; ///< ch:  中点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_NEG_XC           = 0x10101053; ///< ch:  终点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_NEG_Y0           = 0x10101054; ///< ch:  最低评分参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_NEG_Y1           = 0x10101055; ///< ch:  最高评分参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_NORM_DROP        = 0x10101056; ///< ch: 曲线类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_NORM_X0          = 0x10101057; ///< ch: 起点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_NORM_X1          = 0x10101058; ///< ch: 中点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_NORM_XC          = 0x10101059; ///< ch: 终点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_NORM_Y0          = 0x1010105A; ///< ch: 最低评分参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_NORM_Y1          = 0x1010105B; ///< ch: 最高评分参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_NORM_NEG_DROP    = 0x1010105C; ///< ch:  曲线类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_NORM_NEG_X0      = 0x1010105D; ///< ch:  起点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_NORM_NEG_X1      = 0x1010105E; ///< ch:  中点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_NORM_NEG_XC      = 0x1010105F; ///< ch:  终点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_NORM_NEG_Y0      = 0x10101060; ///< ch:  最低评分参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_POSITION_NORM_NEG_Y1      = 0x10101061; ///< ch:  最高评分参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_NORM_DROP            = 0x10101062; ///< ch: 曲线类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_NORM_X0              = 0x10101063; ///< ch: 起点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_NORM_X1              = 0x10101064; ///< ch: 中点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_NORM_XC              = 0x10101065; ///< ch: 终点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_NORM_Y0              = 0x10101066; ///< ch: 最低评分参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_NORM_Y1              = 0x10101067; ///< ch: 最高评分参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_DIFF_NORM_DROP       = 0x10101068; ///< ch: 曲线类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_DIFF_NORM_X0         = 0x10101069; ///< ch: 起点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_DIFF_NORM_X1         = 0x1010106A; ///< ch: 中点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_DIFF_NORM_XC         = 0x1010106B; ///< ch: 终点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_DIFF_NORM_Y0         = 0x1010106C; ///< ch: 最低评分参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_DIFF_NORM_Y1         = 0x1010106D; ///< ch: 最高评分参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_DIFF_NORM_ASYM_DROP  = 0x1010106E; ///< ch: 曲线类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_DIFF_NORM_ASYM_X0    = 0x1010106F; ///< ch: 起点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_DIFF_NORM_ASYM_X1    = 0x10101070; ///< ch: 中点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_DIFF_NORM_ASYM_XC    = 0x10101071; ///< ch: 终点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_DIFF_NORM_ASYM_Y0    = 0x10101072; ///< ch: 最低评分参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_DIFF_NORM_ASYM_Y1    = 0x10101073; ///< ch: 最高评分参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_DIFF_NORM_ASYM_DROPH = 0x10101074; ///< ch: 曲线类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_DIFF_NORM_ASYM_X0H   = 0x10101075; ///< ch: 起点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_DIFF_NORM_ASYM_X1H   = 0x10101076; ///< ch: 中点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_DIFF_NORM_ASYM_XCH   = 0x10101077; ///< ch: 终点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_DIFF_NORM_ASYM_Y0H   = 0x10101078; ///< ch: 最低评分参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_SIZE_DIFF_NORM_ASYM_Y1H   = 0x10101079; ///< ch: 最高评分参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_GRAY_DROP                 = 0x1010107A; ///< ch:  曲线类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_GRAY_X0                   = 0x1010107B; ///< ch:  起点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_GRAY_X1                   = 0x1010107C; ///< ch:  中点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_GRAY_XC                   = 0x1010107D; ///< ch:  终点参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_GRAY_Y0                   = 0x1010107E; ///< ch:  最低评分参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_S_GRAY_Y1                   = 0x1010107F; ///< ch:  最高评分参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_FIND_FUZZY_FLAG             = 0x10101080; ///< ch: 模糊边缘标记参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_SORT_TYPE                   = 0x10101081; ///< ch: 输出的排序类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_EDGE_HALF_KERNEL_SIZE               = 0x10101082;  ///< ch: 滤波核半宽参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_EDGE_THRESHOLD                      = 0x10101083;  ///< ch: 边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_EDGE_POLARITY                       = 0x10101084;  ///< ch: 边线极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_EDGE_FIND_ORIENT                    = 0x10101085; ///< ch: 查找方向参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_EDGE_FIND_MODE                      = 0x10101086; ///< ch: 查找模式参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_EDGE_MAXIMUM                        = 0x10101087; ///< ch: 最大结果数参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_EDGE_MIN_SCORE                      = 0x10101088; ///< ch: 最小分数参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_EDGE_SORT_TYPE                      = 0x10101089; ///< ch: 输出的排序类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_EDGE_WIDTH_HALF_KERNEL_SIZE         = 0x1010108A; ///< ch: 滤波核半宽参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_EDGE_WIDTH_EDGE_THRESHOLD           = 0x1010108B; ///< ch: 边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_EDGE_WIDTH_EDGE0_POLARITY           = 0x1010108C; ///< ch: 边缘0极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_EDGE_WIDTH_EDGE1_POLARITY           = 0x1010108D; ///< ch: 边缘1极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_EDGE_WIDTH_FIND_ORIENT              = 0x1010108E; ///< ch: 查找方向参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_EDGE_WIDTH_FIND_MODE                = 0x1010108F; ///< ch: 查找模式参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_EDGE_WIDTH_MAXIMUM                  = 0x10101090; ///< ch: 最大结果数参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_EDGE_WIDTH_IDEA_WIDTH               = 0x10101091; ///< ch: 理想边缘宽度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_EDGE_WIDTH_MIN_SCORE                = 0x10101092; ///< ch: 最小分数参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_EDGE_WIDTH_SORT_TYPE                = 0x10101093; ///< ch: 输出的排序类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_EDGE_WIDTH_P2BOX_DIST               = 0x10101094; ///< ch: 点边距离参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIRCLE_V2_FIND_P2BOX_DIST           = 0x10101095;  ///< ch: 点边距离参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_EDGE_DETECT_LOW_THRESH              = 0x10101096;  ///< ch: 边界提取低阈值
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_EDGE_DETECT_HIGH_THRESH             = 0x10101097;  ///< ch: 边界提取高阈值
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_EDGE_DISTANCE_TOLERANCE             = 0x10101098;  ///< ch: 输入点容忍距离
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_EDGE_COLLECT_POINT_NUM              = 0x10101099;  ///< ch: 边界查找点数量
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_POINT_ROI_WIDTH                     = 0x1010109A;  ///< ch: 点周围邻域宽度
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_POINT_ROI_HEIGHT                    = 0x1010109B;  ///< ch: 点周围邻域高度
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_MIN_POINT_FIT_NUM                   = 0x1010109C;  ///< ch: 最小拟合点数
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_MAX_POINT_FIT_NUM                   = 0x1010109D;  ///< ch: 最大拟合点数
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIR_FIND_FIT_INIT_TYPE              = 0x1010109E;  ///< ch: 圆查找中拟合初始化类型
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIR_FIND_FIT_WEIGHT_FUN             = 0x1010109F;  ///< ch: 圆查找中拟合权重函数
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIR_FIND_FIT_MAX_ITERS              = 0x101010A0;  ///< ch: 圆查找中拟合最大迭代次数
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIR_FIND_FIT_REJECT_NUM             = 0x101010A1;  ///< ch: 圆查找中拟合剔除点数
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIR_FIND_FIT_REJECT_DIST            = 0x101010A2;  ///< ch: 圆查找中拟合剔除距离
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIR_FIND_FIT_EXPECT_RADIUS          = 0x101010A3; ///< ch: 圆查找中拟合期望半径参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CIR_FIND_FIT_RADIUS_TOLERANCE       = 0x101010A4;  ///< ch: 圆查找中拟合半径容忍参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_LINE_FIND_P2BOX_DIST                = 0x101010A5;  //点边距离参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_LINE_TYPE                   = 0x101010A6;  ///< ch: 直线类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_FIND_ORIENT                 = 0x101010A7;  ///< ch: 搜索方向参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_EDGE_POLARITY               = 0x101010A8;  ///< ch: 边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_EDGE_STRENGTH               = 0x101010A9;  ///< ch: 边缘强度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_KERNER_SIZE                 = 0x101010AA;  ///< ch: 滤波半宽参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_COUNT                       = 0x101010AB;  ///< ch: 卡尺数量参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_PROJECTION_LENGTH           = 0x101010AC;  ///< ch: 卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_FIT_INIT_TYPE               = 0x101010AD;  ///< ch: 拟合初始化类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_FIT_FUN                     = 0x101010AE;  ///< ch: 拟合函数参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_FIT_MAX_ITER                = 0x101010AF;  ///< ch: 最大迭代次数参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_FIT_REJECT_NUM              = 0x101010B0;  ///< ch: 剔除点数参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CALIPER_FIT_REJECT_DIST             = 0x101010B1;  ///< ch: 剔除阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PAIR_LINE_DETECT_EDGE_TYPE          = 0x101010B2; ///< ch: 边缘类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PAIR_LINE_DETECT_EDGE_ORIENT        = 0x101010B3; ///< ch: 边缘查找方向参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PAIR_LINE_DETECT_EDGE0_POLARITY     = 0x101010B4; ///< ch: 边缘0极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PAIR_LINE_DETECT_EDGE1_POLARITY     = 0x101010B5; ///< ch: 边缘1极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PAIR_LINE_DETECT_EDGE_THRESHOLD     = 0x101010B6; ///< ch: 边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PAIR_LINE_DETECT_HALF_KERNEL_SIZE   = 0x101010B7; ///< ch: 滤波核半宽参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PAIR_LINE_DETECT_CALIPER_NUM        = 0x101010B8; ///< ch: 卡尺数量参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PAIR_LINE_DETECT_PROJECTION_LENGTH  = 0x101010B9; ///< ch: 卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PAIR_LINE_DETECT_IDEA_WIDTH         = 0x101010BA; ///< ch: 理想直线对宽度
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PAIR_LINE_DETECT_FIT_INIT_TYPE      = 0x101010BB; ///< ch: 拟合初始化类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PAIR_LINE_DETECT_FIT_FUN            = 0x101010BC; ///< ch: 拟合函数参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PAIR_LINE_DETECT_FIT_REJECT_NUM     = 0x101010BD; ///< ch: 剔除点数参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PAIR_LINE_DETECT_FIT_REJECT_DIST    = 0x101010BE; ///< ch: 剔除阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PAIR_LINE_DETECT_ANGLE_TOL          = 0x101010BF; ///< ch: 平行线角度容忍
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PARALLEL_DETECT_FIND_MODE           = 0x101010C0; ///< ch: 查找类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PARALLEL_DETECT_EDGE_ORIENT         = 0x101010C1; ///< ch: 边缘查找方向参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PARALLEL_DETECT_EDGE_POLARITY       = 0x101010C2; ///< ch: 边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PARALLEL_DETECT_EDGE_THRESHOLD      = 0x101010C3; ///< ch: 边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PARALLEL_DETECT_HALF_KERNEL_SIZE    = 0x101010C4; ///< ch: 滤波核半宽参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PARALLEL_DETECT_CALIPER_NUM         = 0x101010C5; ///< ch: 卡尺数量参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PARALLEL_DETECT_PROJECTION_LENGTH   = 0x101010C6; ///< ch: 卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PARALLEL_DETECT_IDEA_WIDTH          = 0x101010C7; ///< ch: 理想直线间距参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PARALLEL_DETECT_FIT_INIT_TYPE       = 0x101010C8; ///< ch: 拟合初始化类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PARALLEL_DETECT_FIT_FUN             = 0x101010C9; ///< ch: 拟合函数参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PARALLEL_DETECT_FIT_REJECT_DIST     = 0x101010CA; ///< ch: 剔除阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PARALLEL_DETECT_MAXIMUM             = 0x101010CB; ///< ch: 平行线最大条数参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PARALLEL_DETECT_SEQ_NUM             = 0x101010CC; ///< ch: 指定序列号参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PARALLEL_DETECT_SORT_TYPE           = 0x101010CD; ///< ch: 排序类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_MULTILINE_FIND_GRADIENT_FIELD_SIZE     = 0x101010CE; ///< ch:梯度场大小参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_MULTILINE_FIND_PROJECTION_LENGTH       = 0x101010CF; ///< ch:投影长度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_MULTILINE_FIND_EDGE_THRESHOLD          = 0x101010D0; ///< ch:边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_MULTILINE_FIND_NORMAL_CONTRAST_TH      = 0x101010D1; ///< ch:归一对比度阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_MULTILINE_FIND_EDGE_POLARITY           = 0x101010D2; ///< ch:边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_MULTILINE_FIND_EDGE_ANGLE_TOLERANCE    = 0x101010D3; ///< ch:边缘角度容忍参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_MULTILINE_FIND_EDGE_DIST_TOLERANCE     = 0x101010D4; ///< ch:边缘距离容忍参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_MULTILINE_FIND_LINE_MAX_NUM            = 0x101010D5; ///< ch:最大直线数量参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_MULTILINE_FIND_LINE_COVERAGE_TH        = 0x101010D6; ///< ch:覆盖率阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_MULTILINE_FIND_LINE_ROTATION_TOLERANCE = 0x101010D7; ///< ch:直线旋转容忍参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_MULTILINE_FIND_LINE_FIT_FUN            = 0x101010D8; ///< ch:拟合函数参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PEAK_DETECT_EDGE_POLARITY              = 0x101010D9; ///< ch: 边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PEAK_DETECT_EDGE_THRESHOLD             = 0x101010DA; ///< ch: 边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PEAK_DETECT_HALF_KERNEL_SIZE           = 0x101010DB; ///< ch: 滤波核半宽参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PEAK_DETECT_SCAN_WIDTH                 = 0x101010DC; ///< ch: 扫描宽度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_PEAK_DETECT_FIND_ORIENT                = 0x101010DD; ///< ch: 查找方向参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CORNER_DETECT_EDGE0_TYPE        = 0x101010DE; ///< ch: 边缘0类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CORNER_DETECT_EDGE0_ORIENT      = 0x101010DF; ///< ch: 边缘0查找方向参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CORNER_DETECT_EDGE0_POLARITY    = 0x101010E0; ///< ch: 边缘0极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CORNER_DETECT_EDGE1_TYPE        = 0x101010E1; ///< ch: 边缘1类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CORNER_DETECT_EDGE1_ORIENT      = 0x101010E2; ///< ch: 边缘1查找方向参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CORNER_DETECT_EDGE1_POLARITY    = 0x101010E3; ///< ch: 边缘1极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CORNER_DETECT_EDGE_THRESHOLD    = 0x101010E4; ///< ch: 边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CORNER_DETECT_HALF_KERNEL_SIZE  = 0x101010E5; ///< ch: 滤波核半宽参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CORNER_DETECT_CALIPER_NUM       = 0x101010E6; ///< ch: 卡尺数量参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CORNER_DETECT_PROJECTION_LENGTH = 0x101010E7; ///< ch: 卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CORNER_DETECT_FIT_INIT_TYPE     = 0x101010E8; ///< ch: 拟合初始化类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CORNER_DETECT_FIT_FUN           = 0x101010E9; ///< ch: 拟合函数参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CORNER_DETECT_FIT_REJECT_NUM    = 0x101010EA; ///< ch: 剔除点数参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_CORNER_DETECT_FIT_REJECT_DIST   = 0x101010EB; ///< ch: 剔除阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_RECT_DETECT_EDGE_TYPE           = 0x101010EC; ///< ch: 边缘类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_RECT_DETECT_EDGE_UP_POLARITY    = 0x101010ED; ///< ch: 上边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_RECT_DETECT_EDGE_DOWN_POLARITY  = 0x101010EE; ///< ch: 下边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_RECT_DETECT_EDGE_LEFT_POLARITY  = 0x101010EF; ///< ch: 左边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_RECT_DETECT_EDGE_RIGHT_POLARITY = 0x101010F0; ///< ch: 右边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_RECT_DETECT_EDGE_THRESHOLD      = 0x101010F1; ///< ch: 边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_RECT_DETECT_HALF_KERNEL_SIZE    = 0x101010F2; ///< ch: 滤波核半宽参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_RECT_DETECT_CALIPER_NUM         = 0x101010F3; ///< ch: 卡尺数量参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_RECT_DETECT_PROJECTION_LENGTH   = 0x101010F4; ///< ch: 卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_RECT_DETECT_IDEA_WIDTH          = 0x101010F5; ///< ch: 理想矩形宽度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_RECT_DETECT_IDEA_HEIGHT         = 0x101010F6; ///< ch: 理想矩形高度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_RECT_DETECT_FIT_INIT_TYPE       = 0x101010F7; ///< ch: 拟合初始化类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_RECT_DETECT_FIT_FUN             = 0x101010F8; ///< ch: 拟合函数参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_RECT_DETECT_FIT_REJECT_NUM      = 0x101010F9; ///< ch: 剔除点数参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_RECT_DETECT_FIT_REJECT_DIST     = 0x101010FA; ///< ch: 剔除阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_BIN_TYPE               = 0x101010FB;  ///< ch: 阈值方式参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_BIN_POLARITY           = 0x101010FC;  ///< ch: 二值化极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_BIN_LOW_TH            = 0x101010FD;  ///< ch: 低阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_BIN_HIGH_TH            = 0x101010FE;  ///< ch: 高阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_BIN_SOFTNESS           = 0x101010FF;   ///< ch: 柔和度（数值）参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_BIN_SOFT_LOW_TH        = 0x10101100;   ///< ch: 固定软阈值的低阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_BIN_SOFT_HIGH_TH       = 0x10101101;   ///< ch: 固定软阈值的高阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_BIN_LEFT_RATIO         = 0x10101102;   ///< ch: 低尾部（比例）(仅相对软阈值需要该参数)参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_BIN_RIGHT_RATIO        = 0x10101103;   ///< ch: 高尾部（比例）(仅相对软阈值需要该参数)参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_BIN_LOW_TH_RATIO       = 0x10101104;   ///< ch: 低阈值（比例）(仅相对软阈值需要该参数)参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_BIN_HIGHT_TH_RATIO     = 0x10101105;   ///< ch: 高阈值（比例）(仅相对软阈值需要该参数)参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_CONNECTIVITY           = 0x10101106;  ///< ch: 连通类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_HOLE_MIN_AREA          = 0x10101107;  ///< ch: 孔洞最小面积参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_SELECT_BLOB_MAXIMUM    = 0x10101108;  ///< ch: blob最大个数参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_SORT_FEATURE           = 0x10101109;  ///< ch: 排序特征参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_SORT_MODE              = 0x1010110A;  ///< ch: 排序方式参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_SELECT_ENABLE          = 0x1010110B;  ///< ch: 特征使能参数错误

const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_MIN_AREA               = 0x1010110C;  ///< ch: 面积下限参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_MAX_AREA               = 0x1010110D;  ///< ch: 面积上限参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_AREA_WEIGHT            = 0x1010110E;  ///< ch: 面积权重参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_MIN_PERIMETER          = 0x1010110F;  ///< ch: 周长下限参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_MAX_PERIMETER          = 0x10101110;  ///< ch: 周长上限参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_PERIMETER_WEIGHT       = 0x10101111;  ///< ch: 周长权重参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_MIN_SHORT_AXIS         = 0x10101112;  ///< ch: 短轴长度下限参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_MAX_SHORT_AXIS         = 0x10101113;  ///< ch: 短轴长度上限参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_SHORT_AXIS_WEIGHT      = 0x10101114;  ///< ch: 短轴长度权重参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_MIN_LONG_AXIS          = 0x10101115;  ///< ch: 长轴长度下限参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_MAX_LONG_AXIS          = 0x10101116;  ///< ch: 长轴长度上限参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_LONG_AXIS_WEIGHT       = 0x10101117;  ///< ch: 长轴长度权重参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_MIN_AXIS_RATIO         = 0x10101118;  ///< ch: 轴比（短轴/长轴）下限参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_MAX_AXIS_RATIO         = 0x10101119;  ///< ch: 轴比（短轴/长轴）上限参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_AXIS_RATIO_WEIGHT      = 0x1010111A;  ///< ch: 轴比（短轴/长轴）权重参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_MIN_CIRCULARITY        = 0x1010111B;  ///< ch: 圆形度下限参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_MAX_CIRCULARITY        = 0x1010111C;  ///< ch: 圆形度上限参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_CIRCULARITY_WEIGHT     = 0x1010111D;  ///< ch: 圆形度权重参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_MIN_RECTANGULARITY     = 0x1010111E;  ///< ch: 矩形度下限参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_MAX_RECTANGULARITY     = 0x1010111F;  ///< ch: 矩形度上限参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_RECTANGULARITY_WEIGHT  = 0x10101120;  ///< ch: 矩形度权重参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_MIN_CENTRA_BIAS        = 0x10101121;  ///< ch: 质心相对于矩形中心的偏移值下限参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_MAX_CENTRA_BIAS        = 0x10101122;  ///< ch: 质心相对于矩形中心的偏移值上限参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_CENTRA_BIAS_WEIGHT     = 0x10101123;  ///< ch: 质心相对于矩形中心的偏移值权重参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_BLOB_FIND_MIN_OVERLAP_RATIO      = 0x10101124;  ///< ch: 最小重叠率参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_LUM_CHECK_MIN_LUM                = 0x10101125;  ///< ch: 最小亮度值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_LUM_CHECK_MAX_LUM                = 0x10101126;  ///< ch: 最大亮度值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_LUM_CHECK_MIN_AREA               = 0x10101127;  ///< ch: 最小像素个数参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_ELLIPSE_MIN_RADIUS               = 0x10101128;  ///< ch: 查找最小半径参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_ELLIPSE_MAX_RADIUS               = 0x10101129;  ///< ch: 查找最大半径参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_ELLIPSE_EDGE_POLARITY            = 0x1010112A;  ///< ch: 边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_ELLIPSE_FIND_MODE                    = 0x1010112B;  ///< ch: 椭圆类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_ELLIPSE_EDGE_THRESHOLD               = 0x1010112C;  ///< ch: 边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_ELLIPSE_RAY_NUM                      = 0x1010112D;  ///< ch: 射线数量参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_ELLIPSE_EDGE_WIDTH                   = 0x1010112E;  ///< ch: 边缘宽度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_ELLIPSE_REGION_WIDTH                 = 0x1010112F;  ///< ch: 投影宽度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_ELLIPSE_ANGLE_START                  = 0x10101130;  ///< ch: 椭圆环起始角度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_ELLIPSE_ANGLE_EXTEND                 = 0x10101131;  ///< ch: 椭圆环角度范围参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_TOP_LINE_EDGE_POLARITY    = 0x10101132;  ///< ch: 边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_TOP_LINE_FIND_MODE        = 0x10101133;  ///< ch: 查找模式参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_TOP_LINE_FIND_ORIENT      = 0x10101134;  ///< ch: 搜索方向参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_TOP_LINE_EDGE_THRESHOLD   = 0x10101135;  ///< ch: 边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_TOP_LINE_CALIPER_NUM      = 0x10101136;  ///< ch: 卡尺数量参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_TOP_LINE_REGION_WIDTH     = 0x10101137;  ///< ch: 卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_TOP_LINE_HALF_KERNEL_SIZE = 0x10101138;  ///< ch: 滤波核半宽参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_TOP_LINE_FIT_FUN          = 0x10101139;  ///< ch: 拟合方式参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_TOP_LINE_FIT_INIT_TYPE    = 0x1010113A;  ///< ch: 初始拟合类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_TOP_LINE_REJECT_DIST      = 0x1010113B;  ///< ch: 剔除距离参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_TOP_LINE_REJECT_NUM       = 0x1010113C;  ///< ch: 忽略点数参数错误

const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_RIGHT_LINE_EDGE_POLARITY    = 0x1010113D;  ///< ch: 边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_RIGHT_LINE_FIND_MODE        = 0x1010113E;  ///< ch: 查找模式参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_RIGHT_LINE_FIND_ORIENT      = 0x1010113F;  ///< ch: 搜索方向参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_RIGHT_LINE_EDGE_THRESHOLD   = 0x10101140;  ///< ch: 边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_RIGHT_LINE_CALIPER_NUM      = 0x10101141;  ///< ch: 卡尺数量参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_RIGHT_LINE_REGION_WIDTH     = 0x10101142;  ///< ch: 卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_RIGHT_LINE_HALF_KERNEL_SIZE = 0x10101143;  ///< ch: 滤波核半宽参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_RIGHT_LINE_FIT_FUN          = 0x10101144;  ///< ch: 拟合方式参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_RIGHT_LINE_FIT_INIT_TYPE    = 0x10101145;  ///< ch: 初始拟合类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_RIGHT_LINE_REJECT_DIST      = 0x10101146;  ///< ch: 剔除距离参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_RIGHT_LINE_REJECT_NUM       = 0x10101147;  ///< ch: 忽略点数参数错误

const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_BOTTOM_LINE_EDGE_POLARITY    = 0x10101148;  ///< ch: 边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_BOTTOM_LINE_FIND_MODE        = 0x10101149;  ///< ch: 查找模式参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_BOTTOM_LINE_FIND_ORIENT      = 0x1010114A;  ///< ch: 搜索方向参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_BOTTOM_LINE_EDGE_THRESHOLD   = 0x1010114B;  ///< ch: 边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_BOTTOM_LINE_CALIPER_NUM      = 0x1010114C;  ///< ch: 卡尺数量参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_BOTTOM_LINE_REGION_WIDTH     = 0x1010114D;  ///< ch: 卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_BOTTOM_LINE_HALF_KERNEL_SIZE = 0x1010114E;  ///< ch: 滤波核半宽参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_BOTTOM_LINE_FIT_FUN          = 0x1010114F;  ///< ch: 拟合方式参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_BOTTOM_LINE_FIT_INIT_TYPE    = 0x10101150;  ///< ch: 初始拟合类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_BOTTOM_LINE_REJECT_DIST      = 0x10101151;  ///< ch: 剔除距离参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_BOTTOM_LINE_REJECT_NUM       = 0x10101152;  ///< ch: 忽略点数参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_LEFT_LINE_EDGE_POLARITY    = 0x10101153;  ///< ch: 边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_LEFT_LINE_FIND_MODE        = 0x10101154;  ///< ch: 查找模式参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_LEFT_LINE_FIND_ORIENT      = 0x10101155;  ///< ch: 搜索方向参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_LEFT_LINE_EDGE_THRESHOLD   = 0x10101156;  ///< ch: 边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_LEFT_LINE_CALIPER_NUM      = 0x10101157;  ///< ch: 卡尺数量参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_LEFT_LINE_REGION_WIDTH     = 0x10101158;  ///< ch: 卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_LEFT_LINE_HALF_KERNEL_SIZE = 0x10101159;  ///< ch: 滤波核半宽参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_LEFT_LINE_FIT_FUN          = 0x1010115A;  ///< ch: 拟合方式参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_LEFT_LINE_FIT_INIT_TYPE    = 0x1010115B;  ///< ch: 初始拟合类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_LEFT_LINE_REJECT_DIST      = 0x1010115C;  ///< ch: 剔除距离参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_QUADRANGLE_LEFT_LINE_REJECT_NUM       = 0x1010115D;  ///< ch: 忽略点数参数错误

const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_FINDMARK_ROTATE_ANGLE                 = 0x1010115E; ///< ch:旋转角度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_FINDMARK_ROTATE_STEP                  = 0x1010115F; ///< ch:旋转步长参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_FINDMARK_PROJECT_OFFSET               = 0x10101160; ///< ch:投影间隔参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_FINDMARK_LOCATION_TYPE                = 0x10101161; ///< ch:定位类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_FINDMARK_MARK_TYPE                    = 0x10101162; ///< ch:mark类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_REGION_PROJECTION_KERNEL_SIZE         = 0x10101163; ///< ch:滤波尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_PARAM_REGION_PROJECTION_INTERPOLATION       = 0x10101164; ///< ch:插值类型参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MODU_CIRCLE_RATE                            = 0x10101065; ///< ch: 圆度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MODU_LINE_RATE                              = 0x10101066; ///< ch: 直线度参数错误
const static int MVD_ALG_STS_ERR_MVBGEOFIND_MODU_CIRCLE_AREA_RATE                       = 0x10101067; ///< ch: 圆面积度参数错误

// 测量类
const static int MVD_ALG_STS_ERR_MVBMEASURE_MODU_GEOMETRY_MEASURE_DISABLE        = 0x10102000;      ///< ch: 几何测量模块未使能
const static int MVD_ALG_STS_ERR_MVBMEASURE_MODU_INTENSITY_MEASURE_DISABLE       = 0x10102001;      ///< ch: 灰度测量模块未使能
const static int MVD_ALG_STS_ERR_MVBMEASURE_MODU_GEOMETRY_FIT_DISABLE            = 0x10102002;      ///< ch: 几何拟合模块未使能

const static int MVD_ALG_STS_ERR_MVBMEASURE_PARAM_CIRCLE_FIT_INIT_TYPE           = 0x10102003;      ///< ch: 圆拟合初始化类型参数错误
const static int MVD_ALG_STS_ERR_MVBMEASURE_PARAM_CIRCLE_FIT_WEIGHT_FUN          = 0x10102004;      ///< ch: 圆拟合权重函数参数错误
const static int MVD_ALG_STS_ERR_MVBMEASURE_PARAM_CIRCLE_FIT_MAX_ITERS           = 0x10102005;      ///< ch: 圆拟合最大迭代次数参数错误
const static int MVD_ALG_STS_ERR_MVBMEASURE_PARAM_CIRCLE_FIT_REJECT_NUM          = 0x10102006;      ///< ch: 圆拟合剔除点数参数错误	
const static int MVD_ALG_STS_ERR_MVBMEASURE_PARAM_CIRCLE_FIT_REJECT_DIST         = 0x10102007;      ///< ch: 圆拟合剔除距离参数错误	
const static int MVD_ALG_STS_ERR_MVBMEASURE_PARAM_CIRCLE_FIT_EXPECT_RADIUS       = 0x10102008;      ///< ch: 圆拟合期望半径参数错误
const static int MVD_ALG_STS_ERR_MVBMEASURE_PARAM_CIRCLE_FIT_RADIUS_TOLERANCE    = 0x10102009;      ///< ch: 圆拟合半径容忍参数错误
const static int MVD_ALG_STS_ERR_MVBMEASURE_PARAM_LINE_FIT_INIT_TYPE             = 0x1010200A;      ///< ch: 直线拟合初始化类型参数错误
const static int MVD_ALG_STS_ERR_MVBMEASURE_PARAM_LINE_FIT_WEIGHT_FUN            = 0x1010200B;      ///< ch: 直线拟合拟合函数参数错误
const static int MVD_ALG_STS_ERR_MVBMEASURE_PARAM_LINE_FIT_MAX_ITERS             = 0x1010200C;      ///< ch: 直线拟合最大迭代次数参数错误
const static int MVD_ALG_STS_ERR_MVBMEASURE_PARAM_LINE_FIT_REJECT_NUM            = 0x1010200D;      ///< ch: 直线拟合剔除点数参数错误
const static int MVD_ALG_STS_ERR_MVBMEASURE_PARAM_LINE_FIT_REJECT_DIST           = 0x1010200E;      ///< ch: 直线拟合剔除距离参数错误
const static int MVD_ALG_STS_ERR_MVBMEASURE_PARAM_PIXEL_COUNT_THRESH             = 0x1010200F;      ///< ch: 像素统计阈值参数错误

// 图像预处理类
const static int MVD_ALG_STS_ERR_MVBPREPRO_MODU_ENHANCE_DISABLE       = 0x10106000;   ///< ch: 图像增强模块未使能
const static int MVD_ALG_STS_ERR_MVBPREPRO_MODU_FILTER_DISABLE        = 0x10106001;   ///< ch: 图像滤波模块未使能
const static int MVD_ALG_STS_ERR_MVBPREPRO_MODU_TRAN_DISABLE          = 0x10106002;   ///< ch: 图像几何变换模块未使能
const static int MVD_ALG_STS_ERR_MVBPREPRO_MODU_BINA_DISABLE          = 0x10106003;   ///< ch: 图像二值化模块未使能
const static int MVD_ALG_STS_ERR_MVBPREPRO_MODU_GRAY_MORP_DISABLE     = 0x10106004;   ///< ch: 图像灰度形态学模块未使能
const static int MVD_ALG_STS_ERR_MVBPREPRO_MODU_BINARY_MORP_DISABLE   = 0x10106005;   ///< ch: 图像二值形态学模块未使能
const static int MVD_ALG_STS_ERR_MVBPREPRO_MODU_MATH_DISABLE          = 0x10106006;   ///< ch: 图像算术运算模块未使能
const static int MVD_ALG_STS_ERR_MVBPREPRO_MODU_STATISTICS_DISABLE    = 0x10106007;   ///< ch: 图像统计模块未使能
const static int MVD_ALG_STS_ERR_MVBPREPRO_MODU_SHARPNESS_DISABLE     = 0x10106008;   ///< ch: 图像清晰度评估模块未使能
const static int MVD_ALG_STS_ERR_MVBPREPRO_MODU_NORMLIZE_DISABLE      = 0x10106009;   ///< ch: 图像归一化处理模块未使能
const static int MVD_ALG_STS_ERR_MVBPREPRO_MODU_FRAME_MEAN_DISABLE    = 0x1010600A;   ///< ch: 帧平均处理模块未使能
const static int MVD_ALG_STS_ERR_MVBPREPRO_MODU_UNDO_DISTORT_DISABLE  = 0x1010600B;   ///< ch: 图像矫正处理模块未使能
const static int MVD_ALG_STS_ERR_MVBPREPRO_MODU_MASK_GENERATE_DISABLE = 0x1010600C;   ///< ch: 图像掩膜生成模块未使能
const static int MVD_ALG_STS_ERR_MVBPREPRO_MODU_COPY_REGION_DISABLE   = 0x1010600D;   ///< ch: 图像区域拷贝模块未使能
const static int MVD_ALG_STS_ERR_MVBPREPRO_MODU_IMG_ROTATE_DISABLE    = 0x1010600E;   ///< ch: 图像旋转模块未使能
const static int MVD_ALG_STS_ERR_MVBPREPRO_MODU_IMG_MIRROR_DISABLE    = 0x1010600F;   ///< ch: 图像镜像模块未使能
const static int MVD_ALG_STS_ERR_MVBPREPRO_MODU_POLAR_UNWARP_DISABLE  = 0x10106010;   ///< ch: 圆环展开模块未使能
const static int MVD_ALG_STS_ERR_MVBPREPRO_MODU_AFFINE_TRANS_DISABLE  = 0x10106011;   ///< ch: 仿射变换模块未使能
const static int MVD_ALG_STS_ERR_MVBPREPRO_MODU_TRAN_ALL_DISABLE      = 0x10106012;   ///< ch: 图像几何变换模块未使能

const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_ENHANCE_TYPE                  = 0x10106013;    ///< ch: 增强类型参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_ENHANCE_CONTRAST_FACTOR       = 0x10106014;    ///< ch: 对比度调节因子参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_ENHANCE_SHARPEN_FACTOR        = 0x10106015;    ///< ch: 锐度调节因子参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_ENHANCE_GAMMA                 = 0x10106016;    ///< ch: gamma值参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_ENHANCE_SHARPEN_KERNELSIZE    = 0x10106017;    ///< ch: 锐化平滑核大小 参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_ENHANCE_LBCE_STRENGTH         = 0x10106018;    ///< ch: LBCE算法作用强度参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_ENHANCE_LBCE_CEIL_SLOPE       = 0x10106019;    ///< ch: LBCE算法最大增强比率参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_ENHANCE_LBCE_FLOOR_SLOPE      = 0x1010601A;    ///< ch: LBCE算法最小增强比率参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_ENHANCE_LBCE_SHADOW           = 0x1010601B;    ///< ch: LBCE算法暗区范围参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_ENHANCE_LBCE_BRIGHT           = 0x1010601C;    ///< ch: LBCE算法亮区范围参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_ENHANCE_LBCE_CUT_OFF          = 0x1010601D;    ///< ch: LBCE算法滤波截止频率参数错误）
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_SHADE_CORRECT_DIR             = 0x1010601E;    ///< ch: 阴影校正方向参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_SHADE_CORRECT_RATIO           = 0x1010601F;    ///< ch: 阴影校正比率参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_SHADE_CORRECT_GAIN            = 0x10106020;    ///< ch: 阴影校正增益参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_SHADE_CORRECT_OFFSET          = 0x10106021;    ///< ch: 阴影校正补偿值参数错误 
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_SHADE_CORRECT_NOISE           = 0x10106022;    ///< ch: 阴影校正噪声值参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_BRIGHT_ADJUST_GAIN            = 0x10106023;    ///< ch: 亮度校正增益参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_BRIGHT_ADJUST_OFFSET          = 0x10106024;    ///< ch: 亮度校正补偿值参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_GRAY_MORP_TYPE                = 0x10106025;    ///< ch: 形态学类型参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_GRAY_MORP_SHAPE               = 0x10106026;    ///< ch: 灰度形态学形状参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_GRAY_MORP_ITERATIONS          = 0x10106027;    ///< ch: 迭代次数参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_GRAY_MORP_KERNELSIZE_X        = 0x10106028;    ///< ch: 模板宽度参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_GRAY_MORP_KERNELSIZE_Y        = 0x10106029;    ///< ch: 模板高度参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_GRAY_MORP_ANCHOR_X            = 0x1010602A;    ///< ch: 锚点x参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_GRAY_MORP_ANCHOR_Y            = 0x1010602B;    ///< ch: 锚点y参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_BINARY_MORP_TYPE              = 0x1010602C;    ///< ch: 形态学类型参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_BINARY_MORP_SHAPE             = 0x1010602D;    ///< ch: 二值形态学形状参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_BINARY_MORP_ITERATIONS        = 0x1010602E;    ///< ch: 迭代次数参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_BINARY_MORP_KERNELSIZE_X      = 0x1010602F;    ///< ch: 模板宽度参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_BINARY_MORP_KERNELSIZE_Y      = 0x10106030;    ///< ch: 模板高度参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_BINARY_MORP_ANCHOR_X          = 0x10106031;    ///< ch: 锚点x参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_BINARY_MORP_ANCHOR_Y          = 0x10106032;    ///< ch: 锚点y参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_TRAN_TYPE                     = 0x10106033;    ///< ch: 几何变换类型参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_TRAN_ANGLE                    = 0x10106034;    ///< ch: 旋转角度参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_TRAN_INTERPOLATION            = 0x10106035;    ///< ch: 插值类型参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_SCALE_SIZE_HEIGHT             = 0x10106036;    ///< ch: 目标图像高度参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_SCALE_SIZE_WIDTH              = 0x10106037;    ///< ch: 目标图像宽度参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_TRAN_START_ANGLE              = 0x10106038;    ///< ch: 展开起始角度参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_TRAN_ANGLE_SPAN               = 0x10106039;    ///< ch: 展开终止角度参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_TRAN_IN_RADIUS                = 0x1010603A;    ///< ch: 展开内径参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_TRAN_OUT_RADIUS               = 0x1010603B;    ///< ch: 展开外径参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_TRAN_CENTER_X                 = 0x1010603C;    ///< ch: 展开圆心点坐标x参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_TRAN_CENTER_Y                 = 0x1010603D;    ///< ch: 展开圆心点坐标y参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_TRAN_MIRROR_TYPE              = 0x1010603E;    ///< ch: 镜像类型参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_REGION_COPY_TYPE              = 0x1010603F;    ///< ch: 区域拷贝类型参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_REGION_COPY_FILL_VAL          = 0x10106040;    ///< ch: 区域填充值参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_REGION_COPY_EXT_FILL_VAL      = 0x10106041;    ///< ch: 区域外填充值参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_TRAN_POLAR_UNWARP_ANGLE_DIR   = 0x10106042;    ///< ch: 圆环展开角度方向参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_TRAN_POLAR_UNWARP_RADIUS_DIR  = 0x10106043;    ///< ch: 圆环展开半径方向参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_AFFINE_TRAN_INTERPOLATION     = 0x10106044;    ///< ch: 插值类型参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_AFFINE_TRAN_EXTENT_TYPE       = 0x10106045;    ///< ch: 扩充类型参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_AFFINE_TRAN_EXTENT_VAL        = 0x10106046;    ///< ch: 填充值参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_FILT_TYPE                     = 0x10106047;    ///< ch: 滤波类型参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_FILT_KERNELSIZE_X             = 0x10106048;    ///< ch: 均值/中值滤波核宽度参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_FILT_KERNELSIZE_Y             = 0x10106049;    ///< ch: 均值/中值均值滤波核高度参数错误 
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_FILT_GAUSS_KERNELSIZE         = 0x1010604A;    ///< ch: 高斯滤波核参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_FILT_SIGMA                    = 0x1010604B;    ///< ch: 高斯滤波方差参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_FILT_HIGH_THRE                = 0x1010604C;    ///< ch: 高阈值参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_FILT_LOW_THRE                 = 0x1010604D;    ///< ch: 低阈值参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_BINA_TYPE                     = 0x1010604E;    ///< ch: 二值化类型参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_BINA_LOW_THRESH               = 0x1010604F;    ///< ch: 二值化低阈值参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_BINA_HIGH_THRESH              = 0x10106050;    ///< ch: 二值化高阈值参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_BINA_KERNELSIZE_X             = 0x10106051;    ///< ch: 滤波核宽度参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_BINA_KERNELSIZE_Y             = 0x10106052;    ///< ch: 滤波核高度参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_BINA_GAUSS_KERNELSIZE         = 0x10106053;    ///< ch: 高斯滤波核大小参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_BINA_SIGMA                    = 0x10106054;    ///< ch: 高斯滤波方差参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_BINA_LINE_SCAN_MODE           = 0x10106055;    ///< ch: 线扫描方式参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_BINA_LINE_SCAN_LEN            = 0x10106056;    ///< ch: 线扫描长度参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_BINA_LINE_SCAN_THRESH         = 0x10106057;    ///< ch: 线扫描差异阈值参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_BINA_LINE_SCAN_SEG_TYPE       = 0x10106058;    ///< ch: 线扫描分割类型参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_BINA_COMPARE_TYPE             = 0x10106059;    ///< ch: 比较类型参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_BINA_DYN_OFFSET               = 0x1010605A;    ///< ch: 阈值偏移量参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_ARITHMETIC_TYPE               = 0x1010605B;    ///< ch: 算术运算类型参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_STATISTICS_TYPE               = 0x1010605C;    ///< ch: 统计类型参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_SHARPNESS_MODE                = 0x1010605D;    ///< ch: 清晰度评价方式参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_SHARPNESS_NOISE_LEVEL         = 0x1010605E;    ///< ch: 噪声等级参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_NORMLIZE_TYPE                 = 0x1010605F;    ///< ch: 归一化类型参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_NORMLIZE_MEAN_VAL             = 0x10106060;    ///< ch: 目标均值参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_NORMLIZE_STD_VAL              = 0x10106061;    ///< ch: 目标标准差值参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_NORMLIZE_LEFT_CLIP_PERCENT    = 0x10106062;    ///< ch: 左去尾比例参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_NORMLIZE_RIGHT_CLIP_PERCENT   = 0x10106063;    ///< ch: 右去尾比例参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_NORMLIZE_DST_LEFT_POS         = 0x10106064;    ///< ch: 目标灰度值下限参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_NORMLIZE_DST_RIGHT_POS        = 0x10106065;    ///< ch: 目标灰度值上限参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_FRAME_MEAN_LOW_SCALE          = 0x10106066;    ///< ch: 低阈值比例系数参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_FRAME_MEAN_LOW_OFFSET         = 0x10106067;    ///< ch: 低阈值偏移系数参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_FRAME_MEAN_HIGH_SCALE         = 0x10106068;    ///< ch: 高阈值比例系数参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_FRAME_MEAN_HIGH_OFFSET        = 0x10106069;    ///< ch: 高阈值偏移系数参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_UNDO_DISTORT_ZOOM             = 0x1010606A;    ///< ch: 缩放量参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_UNDO_DISTORT_WARP             = 0x1010606B;    ///< ch: 曲张量参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_WARP_DISCORRECT_MODEL         = 0x1010606C;    ///< ch: 畸变矫正模型参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_PARAM_WARP_DISCORRECT_FLAG          = 0x1010606D;    ///< ch: 畸变矫正标志参数错误
const static int MVD_ALG_STS_ERR_MVBPREPRO_MODU_CALIB_DISTORT_DISABLE          = 0x1010606E;    ///< ch: 基于标定的畸变校正模块未使能

// 特征匹配类
const static int MVD_ALG_STS_ERR_MVBPATMATCH_FEATURES_NOT_ENOUGH       = 0x10100000;    ///< ch: 特征不足：特征模板生成失败 | en: Failed to generate the feature modle
const static int MVD_ALG_STS_ERR_MVBPATMATCH_MATCH_VERSION             = 0x10100001;    ///< ch: 算法版本号出错：模板版本号与匹配版本不符 | en: Algorithm version error. The version of the feature modle does not match the version of Matching.
const static int MVD_ALG_STS_ERR_MVBPATMATCH_MODEL_VERSION             = 0x10100002;    ///< ch: 模型版本号出错：模板版本号与当前版本不符 | en: Modle version error. The version of modle input does match the current version.
const static int MVD_ALG_STS_ERR_MVBPATMATCH_MALLOC_MODEL_BUFF_FAIL    = 0x10100003;    ///< ch: 建模时，模型内存申请失败 | en: Model memory allocation failed while modeling.
const static int MVD_ALG_STS_ERR_MVBPATMATCH_MODEL_NO_IMG              = 0x10100004;    ///< ch: 模型中没有图像 | en: Image not included in model
const static int MVD_ALG_STS_ERR_MVBPATMATCH_MODEL_PLATFORM            = 0x10100005;    ///< ch: 模型与平台不匹配 | en: Model does not match platform
const static int MVD_ALG_STS_ERR_MVBPATMATCH_MALLOC_MATCH_BUFF_FAIL    = 0x10100006;    ///< ch: 匹配时内存申请失败 | en: Match malloc buff failed

const static int MVD_ALG_STS_ERR_MVBPATMATCH_MODU_GRAY_MODEL_DISABLE           = 0x10100007;      ///< ch: 灰度模型生成模块未使能
const static int MVD_ALG_STS_ERR_MVBPATMATCH_MODU_GRAY_MATCH_DISABLE           = 0x10100008;      ///< ch: 灰度模板匹配查找模块未使能
const static int MVD_ALG_STS_ERR_MVBPATMATCH_MODU_FEATURE_MODEL_DISABLE        = 0x10100009;      ///< ch: 特征模型生成模块未使能
const static int MVD_ALG_STS_ERR_MVBPATMATCH_MODU_FEATURE_MATCH_DISABLE        = 0x1010000A;      ///< ch: 特征模板匹配查找模块未使能
const static int MVD_ALG_STS_ERR_MVBPATMATCH_MODU_DIPOLE_MODEL_DISABLE         = 0x1010000B;      ///< ch: 偶极子特征模型生成模块未使能
const static int MVD_ALG_STS_ERR_MVBPATMATCH_MODU_DIPOLE_MATCH_DISABLE         = 0x1010000C;      ///< ch: 偶极子特征模板匹配查找模块未使能
const static int MVD_ALG_STS_ERR_MVBPATMATCH_MODU_REFINE_MODEL_DISABLE         = 0x1010000D;      ///< ch: 精修特征模型生成模块未使能
const static int MVD_ALG_STS_ERR_MVBPATMATCH_MODU_REFINE_MATCH_DISABLE         = 0x1010000E;      ///< ch: 精修特征模板匹配查找模块未使能
const static int MVD_ALG_STS_ERR_MVBPATMATCH_MODU_FAST_DIPOLE_MODEL_DISABLE    = 0x1010000F;      ///< ch: 快速偶极子特征模型生成模块未使能
const static int MVD_ALG_STS_ERR_MVBPATMATCH_MODU_FAST_DIPOLE_MATCH_DISABLE    = 0x10100010;      ///< ch: 快速偶极子特征模板匹配查找模块未使能
const static int MVD_ALG_STS_ERR_MVBPATMATCH_MODU_FAST_FEATURE_MODEL_DISABLE   = 0x10100011;      ///< ch: 快速特征模型生成模块未使能
const static int MVD_ALG_STS_ERR_MVBPATMATCH_MODU_FAST_FEATURE_MATCH_DISABLE   = 0x10100012;      ///< ch: 快速特征模板匹配查找模块未使能
const static int MVD_ALG_STS_ERR_MVBPATMATCH_MODU_FEATURE_S16_MODEL_DISABLE    = 0x10100013;      ///< ch: S16特征模型生成模块未使能
const static int MVD_ALG_STS_ERR_MVBPATMATCH_MODU_FEATURE_S16_MATCH_DISABLE    = 0x10100014;      ///< ch: S16特征模板匹配查找模块未使能

const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_GRAY_MATCH_NUM_LEVEL        = 0x10100015;      ///< ch: 灰度模板匹配金字塔层数参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_GRAY_MATCH_MIN_SCORE        = 0x10100016;      ///< ch: 灰度模板匹配最小匹配分数参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_GRAY_MATCH_MAX_MATCH_NUM    = 0x10100017;      ///< ch: 灰度模板匹配最大匹配个数参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_GRAY_MATCH_MAX_OVERLAP      = 0x10100018;      ///< ch: 灰度模板匹配最大重叠率参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_GRAY_MATCH_ANGLE_STEP       = 0x10100019;      ///< ch: 灰度模板匹配角度步长参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_GRAY_MATCH_ANGLE_START      = 0x1010001A;      ///< ch: 灰度模板匹配起始角度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_GRAY_MATCH_ANGLE_END        = 0x1010001B;      ///< ch: 灰度模板匹配终止角度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_GRAY_MATCH_POLARITY         = 0x1010001C;      ///< ch: 灰度模板匹配匹配极性参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_GRAY_MATCH_SORT_TYPE        = 0x1010001D;      ///< ch: 灰度模板匹配排序类型参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_GRAY_MATCH_TIME_OUT         = 0x1010001E;      ///< ch: 灰度模板匹配超时控制参数错误

const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_MODEL_GRANULARITY_FLAG       = 0x1010001F;      ///< ch: 特征模板模型特征尺度标记参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_MODEL_GRANULARITY_FINE       = 0x10100020;      ///< ch: 特征模板模型精细特征尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_MODEL_GRANULARITY_COARSE     = 0x10100021;      ///< ch: 特征模板模型粗糙特征尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_MODEL_EDGE_THRESHOLD_FLAG    = 0x10100022;      ///< ch: 特征模板模型边缘阈值标记参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_MODEL_EDGE_THRESHOLD         = 0x10100023;      ///< ch: 特征模板模型边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_MATCH_MIN_SCORE              = 0x10100024;      ///< ch: 特征模板匹配最小匹配分数参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_MATCH_MAX_MATCH_NUM          = 0x10100025;      ///< ch: 特征模板匹配最大匹配个数参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_MATCH_POLARITY               = 0x10100026;      ///< ch: 特征模板匹配匹配极性参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_MATCH_ANGLE_START            = 0x10100027;      ///< ch: 特征模板匹配起始角度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_MATCH_ANGLE_END              = 0x10100028;      ///< ch: 特征模板匹配终止角度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_MATCH_MAX_OVERLAP            = 0x10100029;      ///< ch: 特征模板匹配最大重叠率参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_MATCH_SCALE_START            = 0x1010002A;      ///< ch: 特征模板匹配起始尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_MATCH_SCALE_END              = 0x1010002B;      ///< ch: 特征模板匹配终止尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_MATCH_SCALE_X_START          = 0x1010002C;      ///< ch: 特征模板匹配X起始尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_MATCH_SCALE_X_END            = 0x1010002D;      ///< ch: 特征模板匹配X终止尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_MATCH_SCALE_Y_START          = 0x1010002E;      ///< ch: 特征模板匹配Y起始尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_MATCH_SCALE_Y_END            = 0x1010002F;      ///< ch: 特征模板匹配Y终止尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_MATCH_EXTENT_RATE            = 0x10100030;      ///< ch: 特征模板匹配延拓阈值参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_MATCH_COARSE_FLAG            = 0x10100031;      ///< ch: 特征模板匹配粗糙度阈值开关参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_MATCH_COARSE_THD             = 0x10100032;      ///< ch: 特征模板匹配粗糙度阈值参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_MATCH_SORT_TYPE              = 0x10100033;      ///< ch: 特征模板匹配排序类型参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_MATCH_TIME_OUT               = 0x10100034;      ///< ch: 特征模板匹超时控制配参数错误

const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MODEL_GRANULARITY_FLAG        = 0x10100035;      ///< ch: 偶极子模板模型特征尺度标记参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MODEL_GRANULARITY_FINE        = 0x10100036;      ///< ch: 偶极子模板模型精细特征尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MODEL_GRANULARITY_COARSE      = 0x10100037;      ///< ch: 偶极子模板模型粗糙特征尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MODEL_EDGE_THRESHOLD_FLAG     = 0x10100038;      ///< ch: 偶极子模板模型边缘阈值标记参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MODEL_EDGE_THRESHOLD          = 0x10100039;      ///< ch: 偶极子模板模型边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MATCH_MIN_SCORE               = 0x1010003A;      ///< ch: 偶极子模板匹配最小匹配分数参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MATCH_MAX_MATCH_NUM           = 0x1010003B;      ///< ch: 偶极子模板匹配最大匹配个数参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MATCH_POLARITY                = 0x1010003C;      ///< ch: 偶极子模板匹配匹配极性参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MATCH_ANGLE_START             = 0x1010003D;      ///< ch: 偶极子模板匹配起始角度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MATCH_ANGLE_END               = 0x1010003E;      ///< ch: 偶极子模板匹配终止角度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MATCH_SCALE_START             = 0x1010003F;      ///< ch: 偶极子模板匹配起始尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MATCH_SCALE_END               = 0x10100040;      ///< ch: 偶极子模板匹配终止尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MATCH_CLUTTER_FLAG            = 0x10100041;      ///< ch: 偶极子模板匹配杂斑标记参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MATCH_MAX_OVERLAP             = 0x10100042;      ///< ch: 偶极子模板匹配最大重叠率参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MATCH_SCALE_X_START           = 0x10100043;      ///< ch: 偶极子模板匹配X起始尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MATCH_SCALE_X_END             = 0x10100044;      ///< ch: 偶极子模板匹配X终止尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MATCH_SCALE_Y_START           = 0x10100045;      ///< ch: 偶极子模板匹配Y起始尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MATCH_SCALE_Y_END             = 0x10100046;      ///< ch: 偶极子模板匹配Y终止尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MATCH_EXTENT_RATE             = 0x10100047;      ///< ch: 偶极子模板匹配延拓阈值参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MATCH_COARSE_FLAG             = 0x10100048;      ///< ch: 偶极子模板匹配粗糙度阈值开关参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MATCH_COARSE_THD              = 0x10100049;      ///< ch: 偶极子模板匹配粗糙度阈值参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MATCH_SORT_TYPE               = 0x1010004A;      ///< ch: 偶极子模板匹配排序类型参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MATCH_TIME_OUT                = 0x1010004B;      ///< ch: 偶极子模板匹超时控制配参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MATCH_THD_FLAG                = 0x1010004C;      ///< ch: 偶极子模板匹配边缘阈值标志参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MATCH_THD                     = 0x1010004D;      ///< ch: 偶极子模板匹边缘阈值参数错误

const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_REFINE_MODEL_GRANULARITY_FLAG        = 0x1010004E;      ///< ch: 精修模板模型特征尺度标记参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_REFINE_MODEL_GRANULARITY_FINE        = 0x1010004F;      ///< ch: 精修模板模型精细特征尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_REFINE_MODEL_EDGE_THRESHOLD_FLAG     = 0x10100050;      ///< ch: 精修模板模型边缘阈值标记参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_REFINE_MODEL_EDGE_THRESHOLD          = 0x10100051;      ///< ch: 精修模板模型边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_REFINE_MATCH_MIN_SCORE               = 0x10100052;      ///< ch: 精修模板匹配最小匹配分数参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_REFINE_MATCH_POLARITY                = 0x10100053;      ///< ch: 精修模板匹配匹配极性参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_REFINE_MATCH_ANGLE_START             = 0x10100054;      ///< ch: 精修模板匹配起始角度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_REFINE_MATCH_ANGLE_END               = 0x10100055;      ///< ch: 精修模板匹配终止角度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_REFINE_MATCH_SCALE_START             = 0x10100056;      ///< ch: 精修模板匹配起始尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_REFINE_MATCH_SCALE_END               = 0x10100057;      ///< ch: 精修模板匹配终止尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_REFINE_MATCH_CLUTTER_FLAG            = 0x10100058;      ///< ch: 精修模板匹配杂斑标记参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_REFINE_MATCH_SCALE_X_START           = 0x10100059;      ///< ch: 精修模板匹配X起始尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_REFINE_MATCH_SCALE_X_END             = 0x1010005A;      ///< ch: 精修模板匹配X终止尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_REFINE_MATCH_SCALE_Y_START           = 0x1010005B;      ///< ch: 精修模板匹配Y起始尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_REFINE_MATCH_SCALE_Y_END             = 0x1010005C;      ///< ch: 精修模板匹配Y终止尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_REFINE_MATCH_TIME_OUT                = 0x1010005D;      ///< ch: 精修模板匹超时控制配参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_REFINE_MATCH_THD_FLAG                = 0x1010005E;      ///< ch: 精修模板匹配边缘阈值标志参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_REFINE_MATCH_THD                     = 0x1010005F;      ///< ch: 精修模板匹边缘阈值参数错误

const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_DIPOLE_MODEL_GRANULARITY_FLAG       = 0x10100060;      ///< ch: 快速偶极子模板模型特征尺度标记参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_DIPOLE_MODEL_GRANULARITY_COARSE     = 0x10100061;      ///< ch: 快速偶极子模板模型粗糙特征尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_DIPOLE_MODEL_EDGE_THRESHOLD_FLAG    = 0x10100062;      ///< ch: 快速偶极子模板模型边缘阈值标记参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_DIPOLE_MODEL_EDGE_THRESHOLD         = 0x10100063;      ///< ch: 快速偶极子模板模型边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_DIPOLE_MATCH_MIN_SCORE              = 0x10100064;      ///< ch: 快速偶极子模板匹配最小匹配分数参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_DIPOLE_MATCH_MAX_MATCH_NUM          = 0x10100065;      ///< ch: 快速偶极子模板匹配最大匹配个数参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_DIPOLE_MATCH_POLARITY               = 0x10100066;      ///< ch: 快速偶极子模板匹配匹配极性参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_DIPOLE_MATCH_ANGLE_START            = 0x10100067;      ///< ch: 快速偶极子模板匹配起始角度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_DIPOLE_MATCH_ANGLE_END              = 0x10100068;      ///< ch: 快速偶极子模板匹配终止角度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_DIPOLE_MATCH_SCALE_START            = 0x10100069;      ///< ch: 快速偶极子模板匹配起始尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_DIPOLE_MATCH_SCALE_END              = 0x1010006A;      ///< ch: 快速偶极子模板匹配终止尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_DIPOLE_MATCH_CLUTTER_FLAG           = 0x1010006B;      ///< ch: 快速偶极子模板匹配杂斑标记参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_DIPOLE_MATCH_MAX_OVERLAP            = 0x1010006C;      ///< ch: 快速偶极子模板匹配最大重叠率参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_DIPOLE_MATCH_EXTENT_RATE            = 0x1010006D;      ///< ch: 快速偶极子模板匹配延拓阈值参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_DIPOLE_MATCH_COARSE_FLAG            = 0x1010006E;      ///< ch: 快速偶极子模板匹配粗糙度阈值开关参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_DIPOLE_MATCH_COARSE_THD             = 0x1010006F;      ///< ch: 快速偶极子模板匹配粗糙度阈值参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_DIPOLE_MATCH_SORT_TYPE              = 0x10100070;      ///< ch: 快速偶极子模板匹配排序类型参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_DIPOLE_MATCH_TIME_OUT               = 0x10100071;      ///< ch: 快速偶极子模板匹超时控制配参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_DIPOLE_MATCH_THD_FLAG               = 0x10100072;      ///< ch: 快速偶极子模板匹配边缘阈值标志参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_DIPOLE_MATCH_THD                    = 0x10100073;      ///< ch: 快速偶极子模板匹边缘阈值参数错误

const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_FEATURE_MODEL_GRANULARITY_FLAG      = 0x10100074;      ///< ch: 快速特征模板模型特征尺度标记参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_FEATURE_MODEL_GRANULARITY_COARSE    = 0x10100075;      ///< ch: 快速特征模板模型粗糙特征尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_FEATUREMODEL_EDGE_THRESHOLD_FLAG    = 0x10100076;      ///< ch: 快速特征模板模型边缘阈值标记参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_FEATURE_MODEL_EDGE_THRESHOLD        = 0x10100077;      ///< ch: 快速特征模板模型边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_FEATURE_MATCH_MIN_SCORE             = 0x10100078;      ///< ch: 快速特征模板匹配最小匹配分数参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_FEATURE_MATCH_MAX_MATCH_NUM         = 0x10100079;      ///< ch: 快速特征模板匹配最大匹配个数参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_FEATURE_MATCH_POLARITY              = 0x1010007A;      ///< ch: 快速特征模板匹配匹配极性参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_FEATURE_MATCH_ANGLE_START           = 0x1010007B;      ///< ch: 快速特征模板匹配起始角度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_FEATURE_MATCH_ANGLE_END             = 0x1010007C;      ///< ch: 快速特征模板匹配终止角度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_FEATURE_MATCH_MAX_OVERLAP           = 0x1010007D;      ///< ch: 快速特征模板匹配最大重叠率参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_FEATURE_MATCH_SCALE_START           = 0x1010007E;      ///< ch: 快速特征模板匹配起始尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_FEATURE_MATCH_SCALE_END             = 0x1010007F;      ///< ch: 快速特征模板匹配终止尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_FEATURE_MATCH_EXTENT_RATE           = 0x10100080;      ///< ch: 快速特征模板匹配延拓阈值参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_FEATURE_MATCH_COARSE_FLAG           = 0x10100081;      ///< ch: 快速特征模板匹配粗糙度阈值开关参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_FEATURE_MATCH_COARSE_THD            = 0x10100082;      ///< ch: 快速特征模板匹配粗糙度阈值参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_FEATURE_MATCH_SORT_TYPE             = 0x10100083;      ///< ch: 快速特征模板匹配排序类型参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_FEATURE_MATCH_TIME_OUT              = 0x10100084;      ///< ch: 快速特征模板匹超时控制配参数错误

const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MODEL_GRANULARITY_FLAG       = 0x10100085;      ///< ch: S16特征模板模型特征尺度标记参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MODEL_GRANULARITY_FINE       = 0x10100086;      ///< ch: S16特征模板模型精细特征尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MODEL_GRANULARITY_COARSE     = 0x10100087;      ///< ch: S16特征模板模型粗糙特征尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MODEL_EDGE_THRESHOLD_FLAG    = 0x10100088;      ///< ch: S16特征模板模型边缘阈值标记参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MODEL_EDGE_THRESHOLD_HIGH    = 0x10100089;      ///< ch: S16特征模板模型边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MODEL_EDGE_THRESHOLD_LOW     = 0x1010008A;      ///< ch: S16特征模板模型边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MATCH_MIN_SCORE              = 0x1010008B;      ///< ch: S16特征模板匹配最小匹配分数参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MATCH_MAX_MATCH_NUM          = 0x1010008C;      ///< ch: S16特征模板匹配最大匹配个数参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MATCH_POLARITY               = 0x1010008D;      ///< ch: S16特征模板匹配匹配极性参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MATCH_ANGLE_START            = 0x1010008E;      ///< ch: S16特征模板匹配起始角度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MATCH_ANGLE_END              = 0x1010008F;      ///< ch: S16特征模板匹配终止角度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MATCH_MAX_OVERLAP            = 0x10100090;      ///< ch: S16特征模板匹配最大重叠率参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MATCH_SCALE_START            = 0x10100091;      ///< ch: S16特征模板匹配起始尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MATCH_SCALE_END              = 0x10100092;      ///< ch: S16特征模板匹配终止尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MATCH_SCALE_X_START          = 0x10100093;      ///< ch: S16特征模板匹配X起始尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MATCH_SCALE_X_END            = 0x10100094;      ///< ch: S16特征模板匹配X终止尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MATCH_SCALE_Y_START          = 0x10100095;      ///< ch: S16特征模板匹配Y起始尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MATCH_SCALE_Y_END            = 0x10100096;      ///< ch: S16特征模板匹配Y终止尺度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MATCH_EXTENT_FLAG            = 0x10100097;      ///< ch: S16特征模板匹配延拓查找标志参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MATCH_EXTENT_THD             = 0x10100098;      ///< ch: S16特征模板匹配延拓阈值参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MATCH_COARSE_FLAG            = 0x10100099;      ///< ch: S16特征模板匹配粗糙度阈值开关参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MATCH_COARSE_THD             = 0x1010009A;      ///< ch: S16特征模板匹配粗糙度阈值参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MATCH_SORT_TYPE              = 0x1010009B;      ///< ch: S16特征模板匹配排序类型参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_S16_MATCH_TIME_OUT_CTL           = 0x1010009C;      ///< ch: S16特征模板匹超时控制配参数错误

const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_PROCESSOR_FREQUENCE                      = 0x1010009D;      ///< ch: 处理器主频参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_DIPOLE_MODEL_IMAGE_FLAG                  = 0x1010009E;      ///< ch: 偶极子模板是否包含图像标记错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FAST_DIPOLE_MODEL_IMAGE_FLAG             = 0x1010009F;      ///< ch: 快速偶极子模板是否包含图像标记错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_MODEL_SENSITIVITY                = 0x101000A0;      ///< ch: 特征模板模型特征灵敏度参数错误
const static int MVD_ALG_STS_ERR_MVBPATMATCH_PARAM_FEATURE_VALUE_SENSITIVITY                = 0x101000A1;      ///< ch: 特征模板模型特征灵敏度数值错误

// 字符识别类
const static int MVD_ALG_STS_ERR_MVBOCR_ROI_TOO_SMALL                  = 0x10104000;    ///< ch: ROI区域比算法要求的最小宽高、模块要求的最小参数值小 | en: The ROI area is smaller than the minimum threshold required by the algorithm and the module.
const static int MVD_ALG_STS_ERR_MVBOCR_IMG_ABILITY_TOO_SMALL          = 0x10104001;    ///< ch: 图像能力集太小 | en: Beyond the limits of image ability.
const static int MVD_ALG_STS_ERR_MVBOCR_CHARACTER_ABILITY_TOO_SMALL    = 0x10104002;    ///< ch: 字符能力集太小 | en: Beyond the limits of character ability.
const static int MVD_ALG_STS_ERR_MVBOCR_GENERATE_DATA_NUM              = 0x10104003;    ///< ch: 字库增加处理样本数量错误 | en: Font library failed to increase the number of samples.
const static int MVD_ALG_STS_ERR_MVBOCR_NO_FONT_FILE                   = 0x10104004;    ///< ch: 字符识别处理缺失字库文件 | en: Character recognition processing failed because of missing font files.
const static int MVD_ALG_STS_ERR_MVBOCR_NO_TRAIN_DATA                  = 0x10104005;    ///< ch: 字库训练处理缺失训练样本 | en: Font training failed because of missing training samples.
const static int MVD_ALG_STS_ERR_MVBOCR_TEXT_DETECT_OUT                = 0x10104006;    ///< ch: 文本检测区域的中心点不在图像内部 | en: The center point of the area to detect text is not inside the image.
const static int MVD_ALG_STS_ERR_MVBOCR_TEXT_BOX_INVALID               = 0x10104007;    ///< ch: 文本检测区域的高、宽小于算法支持的最小字符大小 | en: The width or height of the area to detect text is smaller than the minimum character size supported by the algorithm.
const static int MVD_ALG_STS_ERR_MVBOCR_FONT_MISMATCH                  = 0x10104008;    ///< ch: 字库类型不匹配 | en: Font type does not match.
const static int MVD_ALG_STS_ERR_MVBOCR_FONT_NO_MATCHING_TYPE          = 0x10104009;    ///< ch: 字库没有与待识别字符类型一致的样本 | en: The font does not have a sample that matches the type of character to be recognized.
const static int MVD_ALG_STS_ERR_MVBOCR_EXCEED_MAX_LABEL_NUM           = 0x1010400A;    ///< ch: 训练字符标签种类数大于上限
const static int MVD_ALG_STS_ERR_MVBOCR_CHARACTER_FIELD                = 0x1010400B;    ///< ch: 字符过滤参数错误
const static int MVD_ALG_STS_ERR_MVBOCR_MODU_CHARACTER_SEGMENT                  = 0x1010400C;   ///< ch: 字符分割模块未使能
const static int MVD_ALG_STS_ERR_MVBOCR_MODU_CHARACTER_PREDICT                  = 0x1010400D;   ///< ch: 字符识别模块未使能	
const static int MVD_ALG_STS_ERR_MVBOCR_MODU_FONT_TRAIN                         = 0x1010400E;   ///< ch: 字库训练模块未使能
const static int MVD_ALG_STS_ERR_MVBOCR_MODU_CHARACTER_GENERATE                 = 0x1010400F;   ///< ch: 字库增加模块未使能
const static int MVD_ALG_STS_ERR_MVBOCR_MODU_FONT_EXTRACT                       = 0x10104010;   ///< ch: 字库提取模块未使能
const static int MVD_ALG_STS_ERR_MVBOCR_MODU_CHARACTER_PREDICT_FONT_TRAIN       = 0x10104011;   ///< ch: 字符识别模块或者字库训练模块未使能
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_CHARACTER_POLARITY                = 0x10104012;   ///< ch: 字符极性参数错误
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_BINARY_MODE                       = 0x10104013;   ///< ch: 二值化模式参数错误
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_BINARY_COEF                       = 0x10104014;   ///< ch: 二值化系数参数错误
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_CHARACTER_FRAGMENT_MIN_AREA       = 0x10104015;   ///< ch: 字符片段最小面积参数错误
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_CHARACTER_FRAGMENT_MAX_AREA       = 0x10104016;   ///< ch: 字符片段最大面积参数错误
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_STROKE_WIDTH_FILTER_ENABLE        = 0x10104017;   ///< ch: 字符笔画宽度滤波使能参数错误	
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_CHARACTER_MIN_STROKE_WIDTH        = 0x10104018;   ///< ch: 字符最小笔画宽度参数错误
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_CHARACTER_MAX_STROKE_WIDTH        = 0x10104019;   ///< ch: 字符最大笔画宽度参数错误	
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_IGNORE_BORDER_FRAGMENT_ENABLE     = 0x1010401A;   ///< ch: 是否忽略边框片段参数错误
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_MAIN_LINE_DIST_THRE               = 0x1010401B;   ///< ch: 团块到基线距离阈值参数错误
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_ORIENT_HALF_RANGE                 = 0x1010401C;   ///< ch: 主方向搜索范围参数错误
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_SLANT_HALF_RANGE                  = 0x1010401D;   ///< ch: 倾斜角搜索范围参数错误
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_PROJECT_THRE                      = 0x1010401E;   ///< ch: 投影阈值参数错误
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_GAP_MERGE_ENABLE                  = 0x1010401F;   ///< ch: 是否合并字符间较小间隙参数错误
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_MIN_INTER_CHARACTER_GAP           = 0x10104020;   ///< ch: 字符间最小间隙参数错误
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_CHARACTER_MIN_WIDTH               = 0x10104021;   ///< ch: 字符最小宽度
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_CHARACTER_MAX_WIDTH               = 0x10104022;   ///< ch: 字符最大宽度
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_CHARACTER_MIN_HEIGHT              = 0x10104023;   ///< ch: 字符最小高度
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_CHARACTER_MAX_HEIGHT              = 0x10104024;   ///< ch: 字符最大高度
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_MAX_LENTH_WIDTH_RATIO             = 0x10104025;   ///< ch: 字符box框长宽比最大阈值
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_WIDTH_TYPE                        = 0x10104026;   ///< ch: 字符的宽度类型
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_MIN_INTER_TEXT_GAP                = 0x10104027;   ///< ch: 文本行间最小间隙
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_CHARACTER_FEATURE                 = 0x10104028;   ///< ch: 字符特征
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_CLASSIFICATION                    = 0x10104029;   ///< ch: 字符分类方法
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_KNN_K_VALUE                       = 0x1010402A;   ///< ch: KNN分类算法的k值
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_KNN_DISTANCE                      = 0x1010402B;   ///< ch: KNN分类算法的相似度类型
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_KNN_CLASSES_METHOD                = 0x1010402C;   ///< ch: KNN分类方法
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_SVM_C_VALUE                       = 0x1010402D;   ///< ch: SVM分类算法的惩罚因子
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_ACCEPT_THRESHOLD                  = 0x1010402E;   ///< ch: 字符识别合格阈值
const static int MVD_ALG_STS_ERR_MVBOCR_PARAM_GENERATE_TYPE                     = 0x1010402F;   ///< ch: 字库增加类型

// 字符缺陷检测类
const static int MVD_ALG_STS_ERR_MVBMKINSP_PRC_TYPE_OR_MODU_ENABLE     = 0x10108000;    ///< ch: 输入处理类型与模块使能不一致 | en: Input processing type is inconsistent with the status of ModuleEnable
const static int MVD_ALG_STS_ERR_MVBMKINSP_MARK_NUM                    = 0x10108001;    ///< ch: 输入box个数小于MVBMKINSP_MARK_NUM_MIN或大于设置的最大个数 | en: The number of boxes input less than MVBMKINSP_MARK_NUM_MIN or greater than the maximum number set
const static int MVD_ALG_STS_ERR_MVBMKINSP_MARK_BOX_SCALE              = 0x10108002;    ///< ch: 输入字符box大小范围超过图像范围或与之前生成模型使用的mark_box大小不一样 | en: The input character box size range is larger than the image range or different from the mark_box size used in the previous generation model.
const static int MVD_ALG_STS_ERR_MVBMKINSP_PROC_ORDER                  = 0x10108003;    ///< ch: proc_order输入异常 | en: Input exception
const static int MVD_ALG_STS_ERR_MVBMKINSP_MODEL_TYPE                  = 0x10108004;    ///< ch: 模型输入类型不一致 | en: Model input type is inconsistent.
const static int MVD_ALG_STS_ERR_MVBMKINSP_MODEL_VERSION               = 0x10108005;    ///< ch: 模型输入版本不一致 | en: Model input version is inconsistent.
const static int MVD_ALG_STS_ERR_MVBMKINSP_MODEL_CONFIG                = 0x10108006;    ///< ch: 模型保存的参数异常 | en: Abnormal parameter saved by the model.
const static int MVD_ALG_STS_ERR_MVBMKINSP_MODEL_TRAIN_NUM             = 0x10108007;    ///< ch: 模型训练个数异常
const static int MVD_ALG_STS_ERR_MVBMKINSP_MODU_COAR_CORRE_MODEL_CREATE_DISABLE        = 0x10108008; ///< ch: 基于逐点灰度相关计算的模型建立模块未使能
const static int MVD_ALG_STS_ERR_MVBMKINSP_MODU_FINE_MEAN_STD_MODEL_CREATE_DISABLE     = 0x10108009; ///< ch: 均值标准差法精细检测模型创建模块未使能
const static int MVD_ALG_STS_ERR_MVBMKINSP_MODU_PROJ_MEAN_STD_MODEL_CREATE_DISABLE     = 0x1010800A; ///< ch: 投影均值标准差法精细检测模型创建模块未使能
const static int MVD_ALG_STS_ERR_MVBMKINSP_MODU_PROJ_MEAN_STD_INSP_DISABLE             = 0x1010800B; ///< ch: 投影均值标准差法精细检测模块未使能
const static int MVD_ALG_STS_ERR_MVBMKINSP_MODU_STROKE_WIDTH_MODEL_CREATE_DISABLE      = 0x1010800C; ///< ch: 字宽法精细检测模型创建模块未使能
const static int MVD_ALG_STS_ERR_MVBMKINSP_MODU_STROKE_WIDTH_INSP_DISABLE              = 0x1010800D; ///< ch: 字宽法精细检测模块未使能
const static int MVD_ALG_STS_ERR_MVBMKINSP_MODU_PROJCORRE_MOD_DISABLE                  = 0x1010800E; ///< ch: 基于投影灰度相关计算的模型建立模块未使能
const static int MVD_ALG_STS_ERR_MVBMKINSP_MODU_PROJCORRE_DISABLE                      = 0x1010800F; ///< ch: 基于投影灰度相关计算的缺陷检测模块未使能
const static int MVD_ALG_STS_ERR_MVBMKINSP_MODU_COAR_CORRE_INSP_DISABLE                = 0x10108010; ///< ch: 相关系数法缺陷检测模块未使能
const static int MVD_ALG_STS_ERR_MVBMKINSP_MODU_FINE_MEAN_STD_INSP_DISABLE             = 0x10108011; ///< ch: 均值标准差法缺陷检测模块未使能
const static int MVD_ALG_STS_ERR_MVBMKINSP_MODU_TRAIN_MODEL_DISABLE                    = 0x10108012; ///< ch: 模型训练模块未使能
const static int MVD_ALG_STS_ERR_MVBMKINSP_MODU_MARK_SEGMENT_DISABLE                   = 0x10108013; ///< ch: 字符自动分割模块未使能
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_PROJCORRE_SCORE_THRESH                = 0x10108014;      ///< ch: 投影相关分值阈值参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_INSPECT_PROJ_MEANSTD_HIGH_SCALE       = 0x10108015;      ///< ch: 比例系数参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_INSPECT_PROJ_MEANSTD_HIGH_OFFSET      = 0x10108016;      ///< ch: 偏移系数参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_INSPECT_PROJ_MEANSTD_LOW_SCALE        = 0x10108017;      ///< ch: 比例系数参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_INSPECT_PROJ_MEANSTD_LOW_OFFSET       = 0x10108018;      ///< ch: 偏移系数参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_INSPECT_PROJ_MEANSTD_FLAW_TYPE        = 0x10108019;      ///< ch: 缺陷类型参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_INSPECT_PROJ_MEANSTD_FLAW_MIN_LEN     = 0x1010801A;      ///< ch: 缺陷最小长度参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_MARK_TEMPL_DILATE_WIDTH               = 0x1010801B;      ///< ch: 行方向上的膨胀尺度参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_MARK_TEMPL_DILATE_HEIGHT              = 0x1010801C;      ///< ch: 列方向上的膨胀尺度参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_MARK_DILATE_NUM                       = 0x1010801D;      ///< ch: 字符进行3x3膨胀处理的次数参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_INSPECT_LACK_FLAW_ENABLE              = 0x1010801E;      ///< ch: 缺失检测使能参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_INSPECT_LACK_FLAW_TYPE                = 0x1010801F;      ///< ch: 缺失检测类型参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_INSPECT_LACK_FLAW_SCALE               = 0x10108020;      ///< ch: 缺失检测尺度，参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_INSPECT_LACK_FLAW_MIN_STROKE_WIDTH    = 0x10108021;      ///< ch: 缺失笔画最小宽度阈值参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_INSPECT_EXCESS_FLAW_ENABLE            = 0x10108022;      ///< ch: 冗余检测使能参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_INSPECT_EXCESS_FLAW_SCALE             = 0x10108023;      ///< ch: 冗余检测尺度参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_INSPECT_EXCESS_FLAW_MIN_STROKE_WIDTH  = 0x10108024;      ///< ch: 冗余笔画最小宽度阈值参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_INSPECT_STROKE_WIDTH_IS_LARGE_RES     = 0x10108025;      ///< ch: 是否输出缺陷二值大图参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_COARCORRE_BLOCK_NUM_HEIGHT            = 0x10108026;       ///< ch: 高度方向分块个数参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_COARCORRE_BLOCK_NUM_WIDTH             = 0x10108027;       ///< ch: 宽度方向分块个数参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_COARCORRE_SCORE_THRESH                = 0x10108028;       ///< ch: 逐点灰度投影分值阈值参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_INSPECT_FINE_MEANSTD_HIGH_SCALE       = 0x10108029;       ///< ch: 高阈值比例系数参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_INSPECT_FINE_MEANSTD_HIGH_OFFSET      = 0x1010802A;       ///< ch: 高阈值偏移系数参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_INSPECT_FINE_MEANSTD_LOW_SCALE        = 0x1010802B;       ///< ch: 低阈值比例系数参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_INSPECT_FINE_MEANSTD_LOW_OFFSET       = 0x1010802C;       ///< ch: 低阈值偏移系数参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_INSPECT_FINE_MEANSTD_FLAW_TYPE        = 0x1010802D;       ///< ch: 缺陷类型参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_INSPECT_FINE_MEANSTD_IS_LARGE_RES     = 0x1010802E;       ///< ch: 是否输出缺陷二值大图参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_INSPECT_FINE_MEANSTD_TOLERANCE_FLAG   = 0x1010802F;       ///< ch: 精细比对弹性开关参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_INSPECT_FINE_MEANSTD_TOLERANCE_VAL    = 0x10108030;       ///< ch: 精细比对弹性度参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_NORMLIZE_LEFT_CLIP_PERCENT            = 0x10108031;       ///< ch: 直方图左端比例值参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_NORMLIZE_RIGHT_CLIP_PERCENT           = 0x10108032;       ///< ch: 直方图右端比例值参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_NORMLIZE_TYPE                         = 0x10108033;       ///< ch: 灰度归一化方法参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_MARK_SEGMENT_MIN_AREA                 = 0x10108034;       ///< ch: 字符分割最小面积参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_MARK_SEGMENT_MIN_MARK_WIDTH           = 0x10108035;       ///< ch: 字符分割最小宽度参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_MARK_SEGMENT_MIN_MARK_HEIGHT          = 0x10108036;       ///< ch: 字符分割最小高度参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_MARK_SEGMENT_MAX_MARK_WIDTH           = 0x10108037;       ///< ch: 字符分割最大宽度参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_MARK_SEGMENT_MAX_MARK_HEIGHT          = 0x10108038;       ///< ch: 字符分割最大高度参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_MARK_SEGMENT_IS_MERGE                 = 0x10108039;       ///< ch: 是否合并参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_MARK_SEGMENT_MERGE_DIST_X             = 0x1010803A;       ///< ch: 字符分割水平合并距离参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_MARK_SEGMENT_MERGE_DIST_Y             = 0x1010803B;       ///< ch: 字符分割竖直合并距离参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_MARK_SEGMENT_GRAY_POLARITY            = 0x1010803C;       ///< ch: 字符分割灰度极性参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_MARK_SEGMENT_GRAY_THRESH              = 0x1010803D;       ///< ch: 字符分割灰度阈值参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_MARK_FINE_MATCH_CORRECT_FLAG          = 0x1010803E;       ///< ch: 字符精定位位置纠正标识参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_MARK_FINE_MATCH_TOLERANCE_X           = 0x1010803F;       ///< ch: 字符精定位水平容忍大小参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_MARK_FINE_MATCH_TOLERANCE_Y           = 0x10108040;       ///< ch: 字符精定位竖直容忍大小参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_MARK_FINE_MATCH_SCORE                 = 0x10108041;       ///< ch: 字符精定位分数阈值参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_MARK_FINE_MATCH_ANGLE_START           = 0x10108042;       ///< ch: 字符精定位角度范围起始值参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_MARK_FINE_MATCH_ANGLE_END             = 0x10108043;       ///< ch: 字符精定位角度范围终止值参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_MARK_FINE_MATCH_COARSE_FLAG           = 0x10108044;       ///< ch: 字符精定位粗搜分数使能参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_MARK_FINE_MATCH_COARSE_VAL            = 0x10108045;       ///< ch: 字符精定位粗搜分数值参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_MARK_FINE_MATCH_THD_FLAG              = 0x10108046;       ///< ch: 字符精定位阈值模式参数错误
const static int MVD_ALG_STS_ERR_MVBMKINSP_PARAM_MARK_FINE_MATCH_THD_VAL               = 0x10108047;       ///< ch: 字符精定位阈值参数错误

// 边缘缺陷检测类
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PRC_TYPE_OR_MODU_ENABLE    = 0x10109000;       ///< ch: 输入处理类型与模块使能不一致
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_TRAJ_ELEM_NUM              = 0x10109001;       ///< ch: 输入轨迹几何元素个数超过范围
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_TRAJ_GEO_ELEM_TYPE         = 0x10109002;       ///< ch: 输入轨迹几何元素类型错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_TRAJ_GEO_ELEM_PT           = 0x10109003;       ///< ch: 输入轨迹几何元素坐标点错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_BASIS_ANGEL_OUT            = 0x10109004;       ///< ch: 输入的基准点和运行点角度越界（弧度制，-2pi~2pi）
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_MAX_TRAJ_LEN               = 0x10109005;       ///< ch: 输入的最大轨迹长度能力集不够
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_MAX_TRAJ_NUM               = 0x10109006;       ///< ch: 输入的轨迹条数超过最大能力集
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_VISION_CHECKOUT            = 0x10109007;       ///< ch: 输入的模型与当前要检测的类型不一致
const static int MVD_ALG_STS_ERR_START_INDICATOR_OUT                    = 0x10109008;       ///< ch: 起始输入分析区域越界或无效

const static int MVD_ALG_STS_ERR_MVBEDGEINSP_MODU_LINE_DEFECT_INSP_DISABLE         =0x10109009;  ///< ch:  直线边缘缺陷检测模块未使能
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_MODU_CIRCLE_DEFECT_INSP_DISABLE        =0x1010900A;  ///< ch:  圆弧边缘缺陷检测模块未使能
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_MODU_TREND_EDGE_POS_DISABLE            =0x1010900B;  ///< ch:  边缘位置趋势分析模块未使能
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_MODU_EDGE_PAIR_MOD_DISABLE             =0x1010900C;  ///< ch:  边缘对模型缺陷检测：模型建立模块未使能
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_MODU_EDGE_PAIR_FLAW_DISABLE            =0x1010900D;  ///< ch:  边缘对模型缺陷检测：执行检测模块未使能
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_MODU_EDGE_POINT_MOD_DISABLE            =0x1010900E;  ///< ch:  边缘  模型缺陷检测：模型建立模块未使能
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_MODU_EDGE_POINT_FLAW_DISABLE           =0x1010900F;  ///< ch:  边缘  模型缺陷检测：执行检测模块未使能
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_MODU_EDGE_PAIR_FLAW_NO_MOD_DISABLE     =0x10109010;  ///< ch:  边缘对缺陷检测模块未使能
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_MODU_LINE_PAIR_DEFECT_INSP_DISABLE     =0x10109011;  ///< ch:  直线边缘对缺陷检测模块未使能
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_MODU_CIRCLE_PAIR_DEFECT_INSP_DISABLE   =0x10109012;  ///< ch:  圆弧边缘对缺陷检测模块未使能
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_MODU_TREND_PAIR_POS_DISABLE            =0x10109013;  ///< ch:  边缘对位置趋势分析模块未使能
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_MODU_AUTO_GET_TRAJ_DISABLE             =0x10109014;  ///< ch:  轨迹自动获取模块未使能
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_MODU_TRAJ_POS_GUIDE_DISABLE            =0x10109015;  ///< ch:  轨迹引导模块未使能

const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_DEFECT_INSP_FIND_MODE             =0x10109016; ///< ch:  边缘类型参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_DEFECT_INSP_EDGE_POLARITY         =0x10109017; ///< ch:  边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_DEFECT_INSP_HALF_KERNEL_SIZE      =0x10109018; ///< ch:  滤波尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_DEFECT_INSP_EDGE_STRENGTH         =0x10109019; ///< ch:  边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_DEFECT_INSP_CALIPER_DIST_TRAJ     =0x1010901A;  ///< ch:  卡尺间距参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_DEFECT_INSP_CALIPER_HEIGHT        =0x1010901B;  ///< ch:  卡尺高度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_DEFECT_INSP_CALIPER_WIDTH         =0x1010901C;  ///< ch:  卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_DEFECT_INSP_FLAW_POLARITY_ENABLE  =0x1010901D;  ///< ch:  缺陷极性判断参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_DEFECT_INSP_SIZE_ENABLE           =0x1010901F;  ///< ch:  缺陷尺寸使能参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_DEFECT_INSP_AREA_ENABLE           =0x10109020;  ///< ch:  缺陷面积使能参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_DEFECT_INSP_ROUGH_MIN_DIS         =0x10109021;  ///< ch:  凹凸缺陷最小距离（缺陷距离阈值）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_DEFECT_INSP_ROUGH_MIN_SIZE        =0x10109022;  ///< ch:  凹凸缺陷最小尺寸（缺陷尺寸阈值）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_DEFECT_INSP_ROUGH_MIN_AREA        =0x10109023;  ///< ch:  凹凸缺陷最小面积（缺陷面积阈值）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_DEFECT_INSP_LINE_CALIPER_COUNT    =0x10109024;  ///< ch:  卡尺数量（高级参数）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_DEFECT_INSP_LINE_FIT_REJECT_NUM   =0x10109025; ///< ch:  剔除点数（高级参数）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_DEFECT_INSP_LINE_FIT_REJECT_DIS   =0x10109026;  ///< ch:  剔除阈值（高级参数）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_DEFECT_INSP_TRACK_DIS_TOL         =0x10109027;  ///< ch:  边缘趋势追踪容忍度（高级参数）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_DEFECT_INSP_ROUGH_MAX_DIS         =0x10109028;  ///< ch:  凹凸缺陷最大距离参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_DEFECT_INSP_ROUGH_MAX_SIZE        =0x10109029;  ///< ch:  凹凸缺陷最大尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_DEFECT_INSP_ROUGH_MAX_AREA        =0x1010902A;  ///< ch:  凹凸缺陷最大面积参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_DEFECT_INSP_CRACK_MIN_SIZE        =0x1010902B;  ///< ch:  断裂尺寸最小尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_DEFECT_INSP_CRACK_MAX_SIZE        =0x1010902C;  ///< ch:  断裂尺寸最大尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_DEFECT_INSP_FIND_MODE           =0x1010902D;  ///< ch:  边缘类型参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_DEFECT_INSP_EDGE_POLARITY       =0x1010902E;  ///< ch:  边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_DEFECT_INSP_HALF_KERNEL_SIZE    =0x1010902F;  ///< ch:  滤波尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_DEFECT_INSP_EDGE_STRENGTH       =0x10109030;  ///< ch:  边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_DEFECT_INSP_CALIPER_DIST_TRAJ   =0x10109031;  ///< ch:  卡尺间距参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_DEFECT_INSP_CALIPER_HEIGHT      =0x10109032;  ///< ch:  卡尺高度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_DEFECT_INSP_CALIPER_WIDTH       =0x10109033;  ///< ch:  卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_DEFECT_INSP_FLAW_POLARITY_ENABLE=0x10109034;  ///< ch:  缺陷极性判断参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_DEFECT_INSP_SIZE_ENABLE         =0x10109035;  ///< ch:  缺陷尺寸使能参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_DEFECT_INSP_AREA_ENABLE         =0x10109036;  ///< ch:  缺陷面积使能参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_DEFECT_INSP_ROUGH_MIN_DIS       =0x10109037;  ///< ch:  凹凸缺陷最小距离（缺陷距离阈值）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_DEFECT_INSP_ROUGH_MIN_SIZE      =0x10109038;  ///< ch:  凹凸缺陷最小尺寸（缺陷尺寸阈值）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_DEFECT_INSP_ROUGH_MIN_AREA      =0x10109039;  ///< ch:  凹凸缺陷最小面积（缺陷面积阈值）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_DEFECT_INSP_CIRCLE_CALIPER_NUM  =0x1010903A;  ///< ch:  卡尺数量（高级参数）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_DEFECT_INSP_FIT_REJECT_NUM      =0x1010903B;  ///< ch:  剔除点数（高级参数）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_DEFECT_INSP_FIT_REJECT_DIST     =0x1010903C;  ///< ch:  剔除阈值（高级参数）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_DEFECT_INSP_TRACK_DIS_TOL       =0x1010903D;  ///< ch:  边缘趋势追踪容忍度（高级参数）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_DEFECT_INSP_ROUGH_MAX_SIZE      =0x1010903E;  ///< ch:  凹凸缺陷最大尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_DEFECT_INSP_ROUGH_MAX_DIS       =0x1010903F;  ///< ch:  凹凸缺陷最大距离参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_DEFECT_INSP_ROUGH_MAX_AREA      =0x10109040;  ///< ch:  凹凸缺陷最大面积参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_DEFECT_INSP_CRACK_MIN_SIZE      =0x10109041;  ///< ch:  断裂尺寸最小尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_DEFECT_INSP_CRACK_MAX_SIZE      =0x10109042;  ///< ch:  断裂尺寸最大尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_FIND_MODE        =0x10109043;  ///< ch:  边缘对类型参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_EDGE0_POLARITY   =0x10109044;  ///< ch:  边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_EDGE1_POLARITY   =0x10109045;  ///< ch:  边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_HALF_KERNEL_SIZE =0x10109046;  ///< ch:  滤波尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_EDGE_STRENGTH    =0x10109047;  ///< ch:  边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_IDEA_WIDTH       =0x10109048;  ///< ch:  理想边缘宽度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_CALIPER_DIST_TRAJ=0x10109049;  ///< ch:  卡尺间距参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_CALIPER_HEIGHT   =0x1010904A;  ///< ch:  卡尺高度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_CALIPER_WIDTH    =0x1010904B;  ///< ch:  卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_SIZE_ENABLE      =0x1010904C;  ///< ch:  缺陷尺寸使能参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_AREA_ENABLE      =0x1010904D;  ///< ch:  缺陷面积使能参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_ROUGH_MIN_WID    =0x1010904E;  ///< ch:  凹凸缺陷最小距离（缺陷距离低阈值）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_ROUGH_MAX_WID    =0x1010904F;  ///< ch:  凹凸缺陷最大距离（缺陷距离高阈值）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_ROUGH_MIN_SIZE   =0x10109050;  ///< ch:  凹凸缺陷最小尺寸（缺陷尺寸阈值） 参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_ROUGH_MIN_AREA   =0x10109051;  ///< ch:  凹凸缺陷最小面积（缺陷面积阈值）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_LINE_CALIPER_COUNT=0x10109052;  ///< ch:  卡尺数量（高级参数）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_LINE_FIT_REJECT_NUM  =0x10109053;  ///< ch:  剔除点数（高级参数）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_LINE_FIT_REJECT_DIS  =0x10109054;  ///< ch:  剔除阈值（高级参数）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_LINE_ANGLE_TOL       =0x10109055;  ///< ch:  角度容忍度（高级参数）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_TRACK_DIS_TOL        =0x10109056;  ///< ch:  边缘趋势追踪容忍度（高级参数）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_ROUGH_MAX_SIZE       =0x10109057;  ///< ch:  凹凸缺陷最大尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_ROUGH_MAX_AREA       =0x10109058;  ///< ch:  凹凸缺陷最大面积参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_CRACK_MIN_SIZE       =0x10109059;  ///< ch:  断裂尺寸最小尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_LINE_PAIR_DEFECT_INSP_CRACK_MAX_SIZE       =0x1010905A;  ///< ch:  断裂尺寸最大尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_FIND_MODE          =0x1010905B; ///< ch:  边缘对类型参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_EDGE0_POLARITY     =0x1010905C; ///< ch:  边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_EDGE1_POLARITY     =0x1010905D; ///< ch:  边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_HALF_KERNEL_SIZE   =0x1010905E; ///< ch:  滤波尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_EDGE_STRENGTH      =0x1010905F; ///< ch:  边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_IDEA_WIDTH	        =0x10109060; ///< ch:  理想边缘宽度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_CALIPER_DIST_TRAJ  =0x10109061; ///< ch:  卡尺间距参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_CALIPER_HEIGHT     =0x10109062; ///< ch:  卡尺高度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_CALIPER_WIDTH      =0x10109063; ///< ch:  卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_SIZE_ENABLE        =0x10109064; ///< ch:  缺陷尺寸使能参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_AREA_ENABLE        =0x10109065; ///< ch:  缺陷面积使能参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_ROUGH_MIN_WID      =0x10109066; ///< ch:  凹凸缺陷最小距离（缺陷距离低阈值）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_ROUGH_MAX_WID      =0x10109067; ///< ch:  凹凸缺陷最大距离（缺陷距离高阈值）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_ROUGH_MIN_SIZE     =0x10109068; ///< ch:  凹凸缺陷最小尺寸（缺陷尺寸阈值）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_ROUGH_MIN_AREA     =0x10109069; ///< ch:  凹凸缺陷最小面积（缺陷面积阈值）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_FIT_CALIPER_COUNT  =0x1010906A; ///< ch:  卡尺数量（高级参数）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_FIT_REJECT_NUM     =0x1010906B; ///< ch:  剔除点数（高级参数）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_FIT_REJECT_DIS     =0x1010906C; ///< ch:  剔除阈值（高级参数）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_FIT_CONCENTRIC_TOL =0x1010906D; ///< ch:  角度容忍度（高级参数）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_TRACK_DIS_TOL      =0x1010906E; ///< ch:  边缘趋势追踪容忍度（高级参数）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_ROUGH_MAX_SIZE     =0x1010906F; ///< ch:  凹凸缺陷最大尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_ROUGH_MAX_AREA     =0x10109070; ///< ch:  凹凸缺陷最大面积参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_CRACK_MIN_SIZE     =0x10109071; ///< ch:  断裂尺寸最小尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_CIRCLE_PAIR_DEFECT_INSP_CRACK_MAX_SIZE     =0x10109072; ///< ch:  断裂尺寸最大尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TREND_EDGE_FIND_MODE                       =0x10109073; ///< ch:  边缘类型参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TREND_EDGE_EDGE_POLARITY                   =0x10109074; ///< ch:  边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TREND_EDGE_HALF_KERNEL_SIZE                =0x10109075; ///< ch:  滤波尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TREND_EDGE_EDGE_STRENGTH                   =0x10109076; ///< ch:  边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TREND_EDGE_CALIPER_COUNT                   =0x10109077; ///< ch:  卡尺数量参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TREND_EDGE_DETECT_ORIENT                   =0x10109078; ///< ch:  边缘查找方向参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TREND_EDGE_PROJECTION_LENGTH               =0x10109079; ///< ch:  卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TREND_EDGE_DIST_LOW                        =0x1010907A; ///< ch:  距离低阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TREND_EDGE_DIST_HIGH                       =0x1010907B; ///< ch:  距离高阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TREND_PAIR_FIND_MODE                       =0x1010907C; ///< ch:  边缘对类型参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TREND_PAIR_PAIR_POLARITY0                  =0x1010907D; ///< ch:  边缘0极性参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TREND_PAIR_PAIR_POLARITY1                  =0x1010907E; ///< ch:  边缘1极性参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TREND_PAIR_HALF_KERNEL_SIZE                =0x1010907F; ///< ch:  滤波尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TREND_PAIR_PAIR_STRENGTH                   =0x10109080; ///< ch:  边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TREND_PAIR_PAIR_IDEA_WID                   =0x10109081; ///< ch:  理想边缘宽度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TREND_PAIR_CALIPER_COUNT                   =0x10109082; ///< ch:  卡尺数量参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TREND_PAIR_DETECT_ORIENT                   =0x10109083; ///< ch:  边缘查找方向参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TREND_PAIR_PROJECTION_LENGTH               =0x10109084; ///< ch:  卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TREND_PAIR_DIST_LOW                        =0x10109085; ///< ch:  距离低阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TREND_PAIR_DIST_HIGH                       =0x10109086;  ///< ch:  距离高阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_MOD_EDGE_PAIR_IDEAL_WIDTH        =0x10109087; ///< ch:  边缘对理想宽度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_MOD_FINE_EDGE_ENABLE             =0x10109088; ///< ch:  是否进行边缘精细检测参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_MOD_CALIPER_DIST_COURSE          =0x10109089; ///< ch:  卡尺间距参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_MOD_CALIPER_WIDTH                =0x1010908A; ///< ch:  卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_MOD_CALIPER_HEIGHT               =0x1010908B; ///< ch:  卡尺高度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_MOD_EDGE_PAIR_FIND_MODE          =0x1010908C; ///< ch:  边缘对类型参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_MOD_EDGE_PAIR_EDGE0_POLARITY     =0x1010908D; ///< ch:  边缘对边缘点0边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_MOD_EDGE_PAIR_EDGE1_POLARITY     =0x1010908E; ///< ch:  边缘对边缘点1边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_MOD_EDGE_STRENGTH                =0x1010908F; ///< ch:  边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_MOD_HALF_KERNENL_SIZE            =0x10109090; ///< ch:  滤波尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_MOD_MAX_CALIPER_NUM              =0x10109091; ///< ch:  最大卡尺个数参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_MOD_CALIPER_DETECT_ORIENT        =0x10109092; ///< ch:  卡尺检测方向参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_MOD_CALIPER_DIST_FINE            =0x10109093; ///< ch:  精细检测胶体边缘时放置卡尺间距参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_MOD_MODIFY_WRONG_PTS             =0x10109094; ///< ch:  是否修正错误的边缘点参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_MOD_MODIFY_PTS_NUM               =0x10109095; ///< ch:  边缘点修正时连续拟合边缘点个数参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_MOD_MODIFY_THRESH                =0x10109096; ///< ch:  边缘点修正距离阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_MOD_MODIFY_BREAK_PT_DIST         =0x10109097; ///< ch:  边缘点修正时拐点距离阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_MOD_POLY_CURVE_LEN               =0x10109098; ///< ch:  轨迹多边形折弯处拟合长度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_MOD_TRACK_ENABLE                 =0x10109099; ///< ch:  是否追踪断裂处边缘点参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_MAX_FLAW_NUM                =0x1010909A; ///< ch:  最大缺陷个数参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_EDGE_PAIR_IDEAL_WIDTH       =0x1010909B; ///< ch:  边缘对理想宽度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_CALIPER_WIDTH               =0x1010909C; ///< ch:  卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_CALIPER_HEIGHT              =0x1010909D; ///< ch:  卡尺高度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_EDGE_PAIR_FIND_MODE         =0x1010909E; ///< ch:  边缘对类型参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_EDGE_PAIR_EDGE0_POLARITY    =0x1010909F; ///< ch:  边缘对边缘点0边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_EDGE_PAIR_EDGE1_POLARITY    =0x101090A0; ///< ch:  边缘对边缘点1边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_EDGE_STRENGTH               =0x101090A1; ///< ch:  边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_HALF_KERNENL_SIZE           =0x101090A2; ///< ch:  滤波尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_WIDTH_ENABLE                =0x101090A3; ///< ch:  是否检测宽度缺陷参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_WIDTH_LOW_OFFSET            =0x101090A4; ///< ch:  最小胶体宽度百分比参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_WIDTH_HIGH_OFFSET           =0x101090A5; ///< ch:  最大胶体宽度百分比参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_OFFSET_ENABLE               =0x101090A6; ///< ch:  位置偏移使能参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_OFFSET_THRESH               =0x101090A7; ///< ch:  位置偏移阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_CRACK_ENABLE                =0x101090A8; ///< ch:  断裂缺陷使能参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_LEN_THRESH                  =0x101090A9; ///< ch:  缺陷长度阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_TRACK_ENABLE                =0x101090AA; ///< ch:  是否追踪断裂处边缘点参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_GRAD_ENABLE                 =0x101090AB;  ///< ch:  阶梯缺陷使能参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_GRAD_THRESH                 =0x101090AC;  ///< ch:  阶梯偏离高度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_GRAD_LEN                    =0x101090AD;  ///< ch:  最小阶梯长度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_GRAY_TRACK_ENABLE           =0x101090AE;  ///< ch:  灰度辅助检测参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_BUBBLE_ENABLE               =0x101090AF;  ///< ch:  气泡缺陷检测使能参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_BUBBLE_LOW_OFFSET           =0x101090B0;  ///< ch:  气泡灰度值下限比例参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_BUBBLE_HIGH_OFFSET          =0x101090B1;  ///< ch:  气泡灰度值上限比例参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_BUBBLE_CHANGE_THRESH        =0x101090B2;  ///< ch:  气泡突变阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_BUBBLE_LEN                  =0x101090B3;  ///< ch:  气泡缺陷长度阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_BUBBLE_GRAY_CHANGE_NUM      =0x101090B4;  ///< ch:  突变最大次数参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_GRAY_TRACK_DIS_TOL          =0x101090B5;  ///< ch:  偏离容忍度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_MODIFY_WRONG_PTS            =0x101090B6;  ///< ch:  是否修正错误的边缘点参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_MODIFY_PTS_NUM              =0x101090B7;  ///< ch:  边缘点修正时连续拟合边缘点个数参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_MODIFY_THRESH               =0x101090B8;  ///< ch:  边缘点修正距离阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_MODIFY_BREAK_PT_DIST        =0x101090B9;  ///< ch:  边缘点修正时拐点距离阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_WIDTH_LOW                   =0x101090BA;  ///< ch:  最小胶体宽度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_WIDTH_HIGH                  =0x101090BB; ///< ch:  最大胶体宽度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_ROUGH_ENABLE                =0x101090BC; ///< ch:  是否检测凹凸缺陷参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_AREA_THRESH                 =0x101090BD; ///< ch:  缺陷面积阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_CRACK_THRESH                =0x101090BE; ///< ch:  断裂缺陷阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_MOD_MAX_CALIPER_NUM             =0x101090BF; ///< ch:  最大卡尺个数参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_MOD_CALIPER_DIST                =0x101090C0; ///< ch:  放置卡尺间距参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_MOD_CALIPER_WIDTH               =0x101090C1; ///< ch:  卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_MOD_CALIPER_HEIGHT              =0x101090C2; ///< ch:  卡尺高度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_MOD_EDGE_POINT_FIND_MODE        =0x101090C3; ///< ch:  边缘类型参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_MOD_EDGE_POINT_POLARITY         =0x101090C4; ///< ch:  边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_MOD_EDGE_STRENGTH               =0x101090C5; ///< ch:  边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_MOD_HALF_KERNENL_SIZE           =0x101090C6; ///< ch:  滤波尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_MOD_FINE_EDGE_ENABLE            =0x101090C7; ///< ch:  是否进行边缘精细检测参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_MOD_CALIPER_DETECT_ORIENT       =0x101090C8; ///< ch:  卡尺检测方向参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_MOD_MODIFY_WRONG_PTS            =0x101090C9; ///< ch:  是否修正错误的边缘点参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_MOD_MODIFY_PTS_NUM              =0x101090CA; ///< ch:  边缘点修正时连续拟合边缘点个数参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_MOD_MODIFY_THRESH               =0x101090CB;  ///< ch:  边缘点修正距离阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_MOD_MODIFY_BREAK_PT_DIST        =0x101090CC;  ///< ch:  边缘点修正时拐点距离阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_MOD_POLY_CURVE_LEN              =0x101090CD; ///< ch:  轨迹多边形折弯处拟合长度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_MAX_FLAW_NUM               =0x101090CE; ///< ch:  最大缺陷个数参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_CALIPER_WIDTH              =0x101090CF; ///< ch:  卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_CALIPER_HEIGHT             =0x101090D0; ///< ch:  卡尺高度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_EDGE_FIND_MODE             =0x101090D1; ///< ch:  边缘类型参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_EDGE_POINT_POLARITY        =0x101090D2; ///< ch:  边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_EDGE_STRENGTH              =0x101090D3; ///< ch:  边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_HALF_KERNENL_SIZE          =0x101090D4; ///< ch:  滤波尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_OFFSET_ENABLE              =0x101090D5; ///< ch:  是否检测位置缺陷参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_CRACK_ENABLE               =0x101090D6; ///< ch:  是否检测断裂缺陷参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_GRAD_ENABLE                =0x101090D7; ///< ch:  是否检测边缘阶梯差缺陷参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_LEN_THRESH                  =0x101090D8; ///< ch:  缺陷长度阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_OFFSET_THRESH               =0x101090D9; ///< ch:  位置偏移阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_GRAD_THRESH                 =0x101090DA; ///< ch:  阶梯偏离高度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_GRAD_LEN                    =0x101090DB; ///< ch:  最小阶梯长度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_GRAY_TRACK_ENABLE           =0x101090DC; ///< ch:  灰度辅助检测参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_GRAY_TRACK_DIS_TOL          =0x101090DD; ///< ch:  偏离容忍度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_MODIFY_WRONG_PTS            =0x101090DE; ///< ch:  是否修正错误的边缘点参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_MODIFY_PTS_NUM              =0x101090DF; ///< ch:  边缘点修正时连续拟合边缘点个数参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_MODIFY_THRESH               =0x101090E0; ///< ch:  边缘点修正距离阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_MODIFY_BREAK_PT_DIST        =0x101090E1; ///< ch:  边缘点修正时拐点距离阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_ROUGH_ENABLE                =0x101090E2; ///< ch:  是否检测凹凸缺陷参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_CRACK_THRESH                =0x101090E3; ///< ch:  断裂长度阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_AREA_THRESH                 =0x101090E4; ///< ch:  缺陷面积阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_POINT_FLAW_POS                         =0x101090E5; ///< ch:  边缘缺陷位置参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_MAX_CALIPER_NUM       =0x101090E6; ///< ch:  最大卡尺个数参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_CALIPER_DETECT_ORIENT =0x101090E7; ///< ch:  卡尺检测方向参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_EDGE_PAIR_IDEAL_WIDTH =0x101090E8; ///< ch:  边缘对理想宽度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_FINE_EDGE_ENABLE      =0x101090E9; ///< ch:  是否进行边缘精细检测参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_CALIPER_DIST_COURSE   =0x101090EA; ///< ch:  粗略检测胶体边缘时放置卡尺间距参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_CALIPER_DIST_FINE     =0x101090EB; ///< ch:  精细检测胶体边缘时放置卡尺间距参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_CALIPER_WIDTH         =0x101090EC; ///< ch:  粗略检测胶体边缘时卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_CALIPER_HEIGHT        =0x101090ED; ///< ch:  粗略检测胶体边缘时卡尺高度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_CALIPER_WIDTH_FINE    =0x101090EE; ///< ch:  精细检测胶体边缘时卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_CALIPER_HEIGHT_FINE   =0x101090EF; ///< ch:  精细检测胶体边缘时卡尺高度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_EDGE_PAIR_FIND_MODE   =0x101090F0; ///< ch:  边缘对类型参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_EDGE_PAIR_EDGE0_POLARITY =0x101090F1; ///< ch:  边缘0极性参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_EDGE_PAIR_EDGE1_POLARITY =0x101090F2; ///< ch:  边缘1极性参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_EDGE_STRENGTH            =0x101090F3; ///< ch:  边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_HALF_KERNENL_SIZE        =0x101090F4; ///< ch:  滤波尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_MODIFY_WRONG_PTS         =0x101090F5; ///< ch:  是否修正错误的边缘点参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_MODIFY_PTS_NUM           =0x101090F6; ///< ch:  边缘点修正时连续拟合边缘点个数参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_MODIFY_THRESH            =0x101090F7; ///< ch:  边缘点修正距离阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_MODIFY_BREAK_PT_DIST     =0x101090F8; ///< ch:  边缘点修正时拐点距离阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_POLY_CURVE_LEN           =0x101090F9; ///< ch:  轨迹多边形折弯处拟合长度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_MAX_FLAW_NUM             =0x101090FA; ///< ch:  最大缺陷个数参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_WIDTH_ENABLE             =0x101090FB; ///< ch:  是否检测宽度缺陷参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_WIDTH_LOW                =0x101090FC; ///< ch:  最小胶体宽度（无范围限制）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_WIDTH_HIGH               =0x101090FD; ///< ch:  最大胶体宽度（无范围限制）参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_CRACK_ENABLE             =0x101090FE; ///< ch:  是否检测断裂缺陷参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_ROUGH_ENABLE             =0x101090FF; ///< ch:  是否检测凹凸缺陷参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_LEN_THRESH               =0x10109100; ///< ch:  缺陷长度阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_AREA_THRESH              =0x10109101; ///< ch:  缺陷面积阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_EDGE_PAIR_FLAW_NO_MOD_CRACK_THRESH             =0x10109102; ///< ch:  断裂缺陷阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_AUTO_GET_TRAJ_AUTO_CFG_ENABLE                  =0x10109103; ///< ch:  参数自动化设置使能参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_AUTO_GET_TRAJ_START_EDGE0_POLARITY             =0x10109104; ///< ch:  起始点边缘0极性参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_AUTO_GET_TRAJ_START_EDGE1_POLARITY             =0x10109105; ///< ch:  起始点边缘1极性参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_AUTO_GET_TRAJ_START_EDGE_STRENGTH              =0x10109106; ///< ch:  起始点搜索边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_AUTO_GET_TRAJ_START_IDEA_WIDHT                 =0x10109107; ///< ch:  起始点搜索宽度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_AUTO_GET_TRAJ_MAX_WIDTH_BIAS                   =0x10109108; ///< ch:  最大偏差尺寸参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_AUTO_GET_TRAJ_SMO_COEF                         =0x10109109; ///< ch:  平滑系数参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TRAJ_POS_GUIDE_CALIPER_WIDTH                   =0x1010910A; ///< ch:  卡尺宽度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TRAJ_POS_GUIDE_CALIPER_HEIGHT                  =0x1010910B;  ///< ch:  卡尺高度参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TRAJ_POS_GUIDE_EDGE_FIND_MODE                  =0x1010910C;  ///< ch:  边缘类型参数错误最后一条边缘
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TRAJ_POS_GUIDE_EDGE_POINT_POLARITY             =0x1010910D;  ///< ch:  边缘极性参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TRAJ_POS_GUIDE_EDGE_STRENGTH                   =0x1010910E;  ///< ch:  边缘阈值参数错误
const static int MVD_ALG_STS_ERR_MVBEDGEINSP_PARAM_TRAJ_POS_GUIDE_HALF_KERNENL_SIZE               =0x1010910F;  ///< ch:  滤波尺寸参数错误

// 图像拼接类
// 标定板角点提取模块状态码
const static int MVD_ALG_STS_ERR_MVBSTITCH_PAT_SIZE_NOT_ENOUGH          = 0x1010B000;       ///< ch: 角点提取结果异常（角点数较少，需调节参数）
const static int MVD_ALG_STS_ERR_MVBSTITCH_HOMO_CAL_WRONG               = 0x1010B001;       ///< ch: 标定矩阵计算异常（角点数较少，需调节参数）

// 图像拼接
const static int MVD_ALG_STS_ERR_MVBSTITCH_MODEL_CREATE_FAILED          = 0x1010B002;       ///< ch: 拼接模型创建失败（生成的矩阵异常）
const static int MVD_ALG_STS_ERR_MVBSTITCH_IMG_STITCH_FAILED            = 0x1010B003;       ///< ch: 图像拼接失败(可能为图像有较大倾斜或其他原因)
const static int MVD_ALG_STS_ERR_MVBSTITCH_MODEL_NOT_MATCH              = 0x1010B004;       ///< ch: 图像模型不匹配

// 通用错误码
const static int MVD_ALG_STS_ERR_MVBSTITCH_HOMO_WRONG                   = 0x1010B100;       ///< ch: 矩阵计算异常，需要修改当前模块参数
const static int MVD_ALG_STS_ERR_MVBSTITCH_MODU_CALIBBOARD_LOC_DISABLE                       = 0x1010B005;     ///< ch: 提取自研标定板角点信息模块未使能
const static int MVD_ALG_STS_ERR_MVBSTITCH_MODU_STITCH_MODEL_CREATE_CALIBBOARD_DISABLE       = 0x1010B006;     ///< ch: 图像拼接建模模块未使能
const static int MVD_ALG_STS_ERR_MVBSTITCH_MODU_STITCH_MODEL_CREATE_CORNERS_DISABLE          = 0x1010B007;     ///< ch: 图像拼接建模模块未使能
const static int MVD_ALG_STS_ERR_MVBSTITCH_MODU_IMG_STITCH_DISABLE                           = 0x1010B008;     ///< ch: 图像拼接模块未使能
const static int MVD_ALG_STS_ERR_MVBSTITCH_MODU_STITCH_MODEL_CREATE_DISABLE                  = 0x1010B009;     ///< ch: 图像拼接建模模块未使能
const static int MVD_ALG_STS_ERR_MVBSTITCH_MODU_STITCH_CALIBBOARD_LOC_MODEL_CREATE_DISABLE   = 0x1010B00A;     ///< ch: 提取自研标定板角点信息模块或者图像拼接建模模块未使能

const static int MVD_ALG_STS_ERR_MVBSTITCH_PARAM_IMG_STITCH_MODEL_TYPE                       = 0x1010B00B;   ///< ch: 拼接类型参数错误
const static int MVD_ALG_STS_ERR_MVBSTITCH_PARAM_CHECKERBOARD_SUBPIXEL_WIN_AUTO              = 0x1010B00C;   ///< ch: 亚像素窗口大小自适应标志参数错误
const static int MVD_ALG_STS_ERR_MVBSTITCH_PARAM_CHECKERBOARD_SUBPIXEL_WIN                   = 0x1010B00D;   ///< ch: 亚像素窗口大小参数错误
const static int MVD_ALG_STS_ERR_MVBSTITCH_PARAM_CHECKERBOARD_GRAY_CONTRAST                  = 0x1010B00E;   ///< ch: 黑白模块灰度对比度最小值参数错误
const static int MVD_ALG_STS_ERR_MVBSTITCH_PARAM_CHECKERBOARD_FILT_STS                       = 0x1010B00F;   ///< ch: 中值滤波状态参数错误
const static int MVD_ALG_STS_ERR_MVBSTITCH_PARAM_IMG_STITCH_MERGE_TYPE                       = 0x1010B010;    ///< ch: 融合参数参数错误
const static int MVD_ALG_STS_ERR_MVBSTITCH_PARAM_IMG_STITCH_CUT_RATIO                        = 0x1010B011;    ///< ch: 拼接图像裁剪参数参数错误

// 码评级类
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_MODU_VERIFY_ISO_15415_DISABLE              = 0x1010D000;   ///< ch: 二维码评级模块未使能
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_MODU_VERIFY_ISO_15416_DISABLE              = 0x1010D001;  ///< ch: 一维码评级模块未使能

const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_ISO_15415_POLARITY                   = 0x1010D002;   ///< ch: 码极性参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_ISO_15415_SYMBOL_COLS                = 0x1010D003;   ///< ch: 码列数参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_ISO_15415_SYMBOL_ROWS                = 0x1010D004;   ///< ch: 码行数参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_ISO_15415_MIN_CELL_SIZE              = 0x1010D005;   ///< ch: 最小模块大小参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_ISO_15415_APERTURE                   = 0x1010D006;   ///< ch: aperture大小参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_ISO_15415_MIRROR_MODE                = 0x1010D007;   ///< ch: 镜像模式参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_ISO_15415_STD_APERTURE               = 0x1010D008;   ///< ch: 标准aperture大小参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_ISO_15415_SYS_MAG                    = 0x1010D009;   ///< ch: 成像系统真实放大率参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_ISO_15415_EDGE_FEATURE               = 0x1010D00A;   ///< ch: 码边缘特性参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_DEC_FLAG           = 0x1010D00B;   ///< ch: 计算总体等级是否考虑dec等级标志参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_EDGE_FLAG          = 0x1010D00C;   ///< ch: 计算总体等级是否考虑EDGE等级标志参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_SC_FLAG            = 0x1010D00D;   ///< ch: 计算总体等级是否考虑SC等级标志参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_MINR_FLAG          = 0x1010D00E;   ///< ch: 计算总体等级是否考虑MINR等级标志参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_MINE_FLAG          = 0x1010D00F;   ///< ch: 计算总体等级是否考虑MINE等级标志参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_MOD_FLAG           = 0x1010D010;   ///< ch: 计算总体等级是否考虑MOD等级标志参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_DCD_FLAG           = 0x1010D011;   ///< ch: 计算总体等级是否考虑DCD等级标志参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_DEF_FLAG           = 0x1010D012;   ///< ch: 计算总体等级是否考虑DEF等级标志参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_QZ_FLAG            = 0x1010D013;   ///< ch: 计算总体等级是否考虑QZ等级标志参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_DCD_THR_A          = 0x1010D014;   ///< ch: decodability 分数阈值参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_DCD_THR_B          = 0x1010D015;
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_DCD_THR_C          = 0x1010D016;
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_DCD_THR_D          = 0x1010D017;
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_DEF_THR_A          = 0x1010D018;    ///< ch: defects 分数阈值参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_DEF_THR_B          = 0x1010D019;
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_DEF_THR_C          = 0x1010D01A;
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_DEF_THR_D          = 0x1010D01B;
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_MINR_THR_A         = 0x1010D01C;   ///< ch: minimum reflectance分数阈值参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_MINR_THR_B         = 0x1010D01D;
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_MINR_THR_C         = 0x1010D01E;
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_MINR_THR_D         = 0x1010D01F;
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_MINE_THR_A         = 0x1010D020;  ///< ch: minimum edge contrst分数参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_MINE_THR_B         = 0x1010D021;
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_MINE_THR_C         = 0x1010D022;
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_MINE_THR_D         = 0x1010D023;
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_MOD_THR_A          = 0x1010D024;  ///< ch: modulation 分数阈值参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_MOD_THR_B          = 0x1010D025;
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_MOD_THR_C          = 0x1010D026;
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_MOD_THR_D          = 0x1010D027;
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_SC_THR_A           = 0x1010D028;  ///< ch: symbol contrast 分数阈值参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_SC_THR_B           = 0x1010D029;
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_SC_THR_C           = 0x1010D02A;
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_SC_THR_D           = 0x1010D02B;
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_APERTURE_ENABLE    = 0x1010D02C;  ///< ch: aperture支持外部输入使能标志参数错误
const static int MVD_ALG_STS_ERR_MVBSYMBOLVERIFY_PARAM_BARCODE_ISO_15416_APERTURE           = 0x1010D02D;  ///< ch: apeture值参数错误

/***************************************************************************************************
 * 深度学习模块
***************************************************************************************************/
// 资源类、公共用
const static int MVD_ALG_STS_ERR_CUDA_INVALID_VALUE      = 0x10200000;    ///< ch: cuda参数错误
const static int MVD_ALG_STS_ERR_CUDA_MEMORY_ALLOC       = 0x10200001;    ///< ch: cuda分配内存失败
const static int MVD_ALG_STS_ERR_CUDA_INITIAL            = 0x10200002;    ///< ch: cuda初始化错误
const static int MVD_ALG_STS_ERR_CUDA_RT_UNLOAD          = 0x10200003;    ///< ch: cuda runtime库未加载
const static int MVD_ALG_STS_ERR_CUDA_NO_DEVICE          = 0x10200004;    ///< ch: 不存在支持CUDA的显卡
const static int MVD_ALG_STS_ERR_CUDA_INVALID_DEVICE     = 0x10200005;    ///< ch: 无效CUDA的显卡
const static int MVD_ALG_STS_ERR_CUDA_OTHER              = 0x10200006;    ///< ch: CUDA其他错误
const static int MVD_ALG_STS_ERR_CUBLAS_NOT_INITIALIZED  = 0x10200007;    ///< ch: CUBLAS未初始化
const static int MVD_ALG_STS_ERR_CUBLAS_ALLOC_FAILED     = 0x10200008;    ///< ch: CUBLAS分配失败
const static int MVD_ALG_STS_ERR_CUBLAS_INVALID_VALUE    = 0x10200009;    ///< ch: CUBLAS参数错误
const static int MVD_ALG_STS_ERR_CUBLAS_ARCH_MISMATCH    = 0x1020000A;    ///< ch: CUBLAS架构不匹配
const static int MVD_ALG_STS_ERR_CUBLAS_MAPPING_ERROR    = 0x1020000B;    ///< ch: CUBLAS映射错误
const static int MVD_ALG_STS_ERR_CUBLAS_EXECUTION_FAILED = 0x1020000C;    ///< ch: CUBLAS执行错误
const static int MVD_ALG_STS_ERR_CUBLAS_INTERNAL_ERROR   = 0x1020000D;    ///< ch: CUBLAS内部错误
const static int MVD_ALG_STS_ERR_CUBLAS_NOT_SUPPORTED    = 0x1020000E;    ///< ch: CUBLAS功能不支持
const static int MVD_ALG_STS_ERR_CUBLAS_LICENSE_ERROR    = 0x1020000F;    ///< ch: CUBLAS的LICENSE不符
const static int MVD_ALG_STS_ERR_CUBLAS_OTHER            = 0x10200010;    ///< ch: CUBLAS其他错误
const static int MVD_ALG_STS_ERR_CUDNN_NOT_INITIALIZED   = 0x10200011;    ///< ch: CUDNN未初始化
const static int MVD_ALG_STS_ERR_CUDNN_ALLOC_FAILED      = 0x10200012;    ///< ch: CUDNN分配失败
const static int MVD_ALG_STS_ERR_CUDNN_BAD_PARAM         = 0x10200013;    ///< ch: CUDNN参数错误
const static int MVD_ALG_STS_ERR_CUDNN_INTERNAL_ERROR    = 0x10200014;    ///< ch: CUDNN内部错误
const static int MVD_ALG_STS_ERR_CUDNN_INVALID_VALUE     = 0x10200015;    ///< ch: CUDNN无效值
const static int MVD_ALG_STS_ERR_CUDNN_ARCH_MISMATCH     = 0x10200016;    ///< ch: CUDNN架构不匹配
const static int MVD_ALG_STS_ERR_CUDNN_MAPPING_ERROR     = 0x10200017;    ///< ch: CUDNN映射错误
const static int MVD_ALG_STS_ERR_CUDNN_EXECUTION_FAILED  = 0x10200018;    ///< ch: CUDNN执行错误
const static int MVD_ALG_STS_ERR_CUDNN_NOT_SUPPORTED     = 0x10200019;    ///< ch: CUDNN功能不支持
const static int MVD_ALG_STS_ERR_CUDNN_LICENSE_ERROR     = 0x1020001A;    ///< ch: CUDNN的LICENSE不符
const static int MVD_ALG_STS_ERR_CUDNN_OTHER             = 0x1020001B;    ///< ch: CUDNN其他错误

// 图像分类
const static int MVD_ALG_STS_ERR_MVBCNN_CLASSIFY_PARAM_RESIZE_FILL_VAL      = 0x10202000;      ///< ch: 缩放时填充的数据值参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CLASSIFY_PARAM_RESIZE_TYPE          = 0x10202001;      ///< ch: 缩放方法参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CLASSIFY_MODU_CLS_DISABLE           = 0x10202002;      ///< ch: 前向分类模块未使能
// 目标检测类
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_VCA_MEM_SPACE              = 0x10203000;      ///< ch: 内存空间错误，不支持的内存空间
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_VCA_PLAT                   = 0x10203001;      ///< ch: 开发平台错误，只可用于海思平台
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_VCA                        = 0x10203002;      ///< ch: 内部HKANN库处理异常
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_PARAM_MAX_OBJ_NUM          = 0x10203003;      ///< ch: 最大目标数目参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_PARAM_MIN_SCORE            = 0x10203004;      ///< ch: 最小置信度参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_PARAM_MAX_OVERLAP          = 0x10203005;      ///< ch: 最大重叠率参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_PARAM_RESIZE_FILL_VAL      = 0x10203006;      ///< ch: 缩放时填充的数据值参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_PARAM_RESIZE_TYPE          = 0x10203007;      ///< ch: 缩放方法参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_PARAM_START_ANGLE          = 0x10203008;      ///< ch: 起始角度参数错误		
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_PARAM_END_ANGLE            = 0x10203009;      ///< ch: 终止角度参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_PARAM_MIN_WIDTH            = 0x1020300A;      ///< ch: 最小宽度参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_PARAM_MAX_WIDTH            = 0x1020300B;      ///< ch: 最大宽度参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_PARAM_MIN_HEIGHT           = 0x1020300C;      ///< ch: 最小高度参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_PARAM_MAX_HEIGHT           = 0x1020300D;      ///< ch: 最大高度参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_PARAM_ANGLE_ENABLE         = 0x1020300E;      ///< ch: 角度筛选使能参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_PARAM_WIDTH_ENABLE         = 0x1020300F;      ///< ch: 宽度筛选使能参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_PARAM_HEIGHT_ENABLE        = 0x10203010;      ///< ch: 高度筛选使能参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_PARAM_OBJ_COMBINE_ENABLE   = 0x10203011;      ///< ch: 目标框合并使能参数错误	
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_PARAM_ORDER_TYPE           = 0x10203012;      ///< ch: 排序方式参数错误	
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_PARAM_OUT_FILTER_ENABLE    = 0x10203013;      ///< ch: 出界是否过滤参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_PARAM_MAX_COVERAGE         = 0x10203014;      ///< ch: 最大覆盖率参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_PARAM_OUT_FILTER_SCORE     = 0x10203015;      ///< ch: 目标保留在ROI内的面积比参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_MODU_DETECT_DISABLE        = 0x10203016;      ///< ch: 前向预测模块未使能
const static int MVD_ALG_STS_ERR_MVBCNN_DETECT_DIFFCLASSNMS_ENABLE        = 0x10203017;      ///< ch: 不同类别非极大抑制使能
// 字符定位类
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_DETECT_MODU_DETECT_DISABLE        = 0x10204000;      ///< ch: 文本定位模块未使能
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_RECOG_MODU_RECOG_DISABLE          = 0x10204001;      ///< ch: 单字符检测模块未使能
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_OCR_MODU_RECOG_DISABLE            = 0x10204002;      ///< ch: 字符识别模块未使能
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_DETECT_PARAM_MAX_OBJ_NUM          = 0x10204003;      ///< ch: 最大目标数目参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_DETECT_PARAM_MIN_SCORE            = 0x10204004;      ///< ch: 最小置信度参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_DETECT_PARAM_BOX_SCORE            = 0x10204005;      ///< ch: 最小置信度参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_DETECT_PARAM_MAX_OVERLAP          = 0x10204006;      ///< ch: 最大重叠率参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_DETECT_PARAM_LINK_THRESHOLD       = 0x10204007;      ///< ch: 链接阈值参数错误	
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_DETECT_PARAM_START_ANGLE          = 0x10204008;      ///< ch: 起始角度参数错误		
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_DETECT_PARAM_END_ANGLE            = 0x10204009;      ///< ch: 终止角度参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_DETECT_PARAM_MIN_WIDTH            = 0x1020400A;      ///< ch: 最小宽度参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_DETECT_PARAM_MAX_WIDTH            = 0x1020400B;      ///< ch: 最大宽度参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_DETECT_PARAM_MIN_HEIGHT           = 0x1020400C;      ///< ch: 最小高度参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_DETECT_PARAM_MAX_HEIGHT           = 0x1020400D;      ///< ch: 最大高度参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_DETECT_PARAM_ANGLE_ENABLE         = 0x1020400E;      ///< ch: 角度筛选使能参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_DETECT_PARAM_WIDTH_ENABLE         = 0x1020400F;      ///< ch: 宽度筛选使能参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_DETECT_PARAM_HEIGHT_ENABLE        = 0x10204010;      ///< ch: 高度筛选使能参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_DETECT_PARAM_RESIZE_FILL_VAL      = 0x10204011;      ///< ch: 缩放时填充的数据值参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_DETECT_PARAM_RESIZE_TYPE          = 0x10204012;      ///< ch: 缩放方法参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_DETECT_PARAM_ORDER_TYPE           = 0x10204013;      ///< ch: 排序方式参数错误	
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_DETECT_PARAM_OUT_FILTER_ENABLE    = 0x10204014;      ///< ch: 出界是否过滤参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_DETECT_PARAM_OUT_FILTER_SCORE     = 0x10204015;      ///< ch: 出界是否过滤参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_RECOG_PARAM_MAX_OBJ_NUM           = 0x10204016;      ///< ch: 最大目标数目参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_RECOG_PARAM_MIN_SCORE             = 0x10204017;      ///< ch: 最小置信度参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_RECOG_PARAM_MAX_OVERLAP           = 0x10204018;      ///< ch: 最大重叠率参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_RECOG_PARAM_MIN_WIDTH             = 0x10204019;      ///< ch: 最小宽度参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_RECOG_PARAM_MAX_WIDTH             = 0x1020401A;      ///< ch: 最大宽度参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_RECOG_PARAM_MIN_HEIGHT            = 0x1020401B;      ///< ch: 最小高度参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_RECOG_PARAM_MAX_HEIGHT            = 0x1020401C;      ///< ch: 最大高度参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_RECOG_PARAM_WIDTH_ENABLE          = 0x1020401D;      ///< ch: 宽度筛选使能参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_RECOG_PARAM_HEIGHT_ENABLE         = 0x1020401E;      ///< ch: 高度筛选使能参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_RECOG_PARAM_TOP_N                 = 0x1020401F;      ///< ch: 输出结果的top_n参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_RECOG_PARAM_ORDER_TYPE            = 0x10204020;      ///< ch: 排序方式参数错误	
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_RECOG_PARAM_OUT_FILTER_ENABLE     = 0x10204021;      ///< ch: 出界是否过滤参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_CHAR_RECOG_PARAM_OUT_FILTER_SCORE      = 0x10204022;      ///< ch: 出界是否过滤参数错误
const static int MVD_ALG_STS_ERR_MVBCNNOCR_PARAM_MIN_SCORE                     = 0x10204023;      ///< ch: 最小置信度参数错误
const static int MVD_ALG_STS_ERR_MVBCNNOCR_PARAM_TOP_N                         = 0x10204024;      ///< ch: 输出结果的top_n参数错误
// 字符识别类
const static int MVD_ALG_STS_ERR_MVBOCRDL_FAIL                     = 0x10205000;      ///< ch: 字符识别失败
const static int MVD_ALG_STS_ERR_MVBOCRDL_RESOLUTION_UNSUPPORT     = 0x10205001;      ///< ch: 分辨率不满足
const static int MVD_ALG_STS_ERR_MVBOCRDL_MEM_ALLOC_FAIL           = 0x10205002;      ///< ch: 内存分配失败
const static int MVD_ALG_STS_ERR_MVBOCRDL_MEM_OVER                 = 0x10205003;      ///< ch: 接口内存溢出
const static int MVD_ALG_STS_ERR_MVBOCRDL_MEM_CHECK_FAIL           = 0x10205004;      ///< ch: 内存校验失败
const static int MVD_ALG_STS_ERR_MVBOCRDL_PTR_NULL                 = 0x10205005;      ///< ch: 接口或流程函数参数指针为空
const static int MVD_ALG_STS_ERR_MVBOCRDL_MODEL_MEM_ERROR          = 0x10205006;      ///< ch: 模型内存错误
const static int MVD_ALG_STS_ERR_MVBOCRDL_CUDA_HANDLE_ERROR        = 0x10205007;      ///< ch: 外部传入的cuda handle为空
const static int MVD_ALG_STS_ERR_MVBOCRDL_MODEL_PARAM_PTR_NULL     = 0x10205008;      ///< ch: 模型参数指针为空
const static int MVD_ALG_STS_ERR_MVBOCRDL_MODEL_ITF_PTR_NULL       = 0x10205009;      ///< ch: 模型接口指针为空
const static int MVD_ALG_STS_ERR_MVBOCRDL_LOAD_MODEL_SIZE_ERR      = 0x1020500A;      ///< ch: 模型数量错误
const static int MVD_ALG_STS_ERR_MVBOCRDL_LOAD_MODEL_TYPE_ERR      = 0x1020500B;      ///< ch: 模型类型错误
const static int MVD_ALG_STS_ERR_MVBOCRDL_POS_INFO_FAIL            = 0x1020500C;      ///< ch: 获取调试信息失败
const static int MVD_ALG_STS_ERR_MVBOCRDL_GET_MODEL_SIZE           = 0x1020500D;      ///< ch: 获取模型内存失败
const static int MVD_ALG_STS_ERR_MVBOCRDL_CREATE_MODEL             = 0x1020500E;      ///< ch: 创建模型失败
const static int MVD_ALG_STS_ERR_MVBOCRDL_MODEL_INFO_ERR           = 0x1020500F;      ///< ch: 获取文件头信息失败
const static int MVD_ALG_STS_ERR_MVBOCRDL_MODEL_CNNLIB_MODEL_ERR   = 0x10205010;      ///< ch: cnnlib读取模型失败
const static int MVD_ALG_STS_ERR_MVBOCRDL_LOAD_MODEL_ERR           = 0x10205011;      ///< ch: 模型加载失败
// 图像分割类
const static int MVD_ALG_STS_ERR_MVBCNN_FLAW_MODEL                     = 0x10206000;             ///< ch: 模型错误
const static int MVD_ALG_STS_ERR_MVBCNN_FLAW_MODEL_SIZE                = 0x10206001;             ///< ch: 模型大小错误
const static int MVD_ALG_STS_ERR_MVBCNN_FLAW_MODEL_VERSIONE            = 0x10206002;             ///< ch: 模型版本错误
const static int MVD_ALG_STS_ERR_MVBCNN_FLAW_UNREALIZE                 = 0x10206003;             ///< ch: 该功能未实现
const static int MVD_ALG_STS_ERR_MVBCNN_FLAW_ASI_GET_MODEL_SIZE        = 0x10206004;             ///< ch: ASI获取模型内存失败
const static int MVD_ALG_STS_ERR_MVBCNN_FLAW_CREATE_MODEL              = 0x10206005;             ///< ch: ASI创建模型失败
const static int MVD_ALG_STS_ERR_MVBCNN_FLAW_GET_MODEL_TYPE            = 0x10206006;             ///< ch: ASI获取模型类型失败
const static int MVD_ALG_STS_ERR_MVBCNN_FLAW_MODU_FORWARD_DISABLE      = 0x10206007;             ///< ch: 前向预测模块未使能
const static int MVD_ALG_STS_ERR_MVBCNN_FLAW_PARAM_SAMPLE_INTERVAL     = 0x10206008;             ///< ch: 检测像素间隔参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_FLAW_PARAM_IMG_PAD_TYPE        = 0x10206009;             ///< ch: 图片padding方式参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_FLAW_PARAM_APP_MODE            = 0x1020600A;             ///< ch: 算法库运行模式参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_FLAW_PARAM_MIN_SCORE           = 0x1020600B;             ///< ch: 最小分数参数错误
const static int MVD_ALG_STS_ERR_MVBCNN_FLAW_PLATFORM                  = 0x1020600C;             ///< ch: 运行平台错误，只支持cpu/gpu
const static int MVD_ALG_STS_ERR_MVBCNN_FLAW_MODEL_PLATFORM            = 0x1020600D;             ///< ch: 当前运行平台不支持该模式
// 图像检索类
const static int MVD_ALG_STS_ERR_MVBCNN_RETRIEVAL_MODU_RETRIEVAL_DISABLE  = 0x1020C000;        ///< ch: 图像检索模块未使能
const static int MVD_ALG_STS_ERR_MVBCNN_RETRIEVAL_MODU_COMPARE_DISABLE    = 0x1020C001;        ///< ch: 图像校验模块未使能
const static int MVD_ALG_STS_ERR_MVBCNN_RETRIEVAL_MODU_GALLERY_DISABLE    = 0x1020C002;        ///< ch: gallery管理模块未使能
const static int MVD_ALG_STS_ERR_MVBCNN_RETRIEVAL_PARAM_MIN_SIMILARITY    = 0x1020C003;        ///< ch: 最小相似度参数错误	
const static int MVD_ALG_STS_ERR_MVBCNN_RETRIEVAL_PARAM_II_TOP_NUM        = 0x1020C004;        ///< ch: 输出top n参数错误
// 实例分割类
const static int MVD_ALG_STS_ERR_MVBCNN_SEG_VCA_MEM_SPACE      = 0x1020D000;       ///< ch: 内存空间错误，不支持的内存空间
const static int MVD_ALG_STS_ERR_MVBCNN_SEG_VCA_PLAT           = 0x1020D001;       ///< ch: 开发平台错误，只可用于海思平台
const static int MVD_ALG_STS_ERR_MVBCNN_SEG_VCA                = 0x1020D002;       ///< ch: 内部HKANN库处理异常
const static int MVD_ALG_STS_ERR_MVBCNN_SEG_MASK_PTS_NUM       = 0x1020D003;       ///< ch: 掩模图blob轮廓点数异常
#endif //_MVD_ERROR_DEFINE_ALGO_H_

